#+BEGIN
* 2013
** 2013-05 五月
*** 2013-05-28 星期二
**** 还是将学习记录单列文件
学习的记录文件与日常日记分开来
Entered on [2013-05-28 二 07:30]
 
 [[file:~/org/gtd.org::*emacs][emacs]]
*** 2013-05-29 星期三
**** 关于 emacs org gtd
*** 2013-05-31 星期五
**** org table
#+PLOT: title:"购物支出" ind:1 deps:(3) type:2d
|------+------+------+--------+-------+--------|
| 序号 | 项目 | 单位 |   单价 |  数量 |   金额 |
|------+------+------+--------+-------+--------|
|    1 | 加油 | 升   |   7.47 | 31.12 | 232.47 |
|    2 | 花洒 | 支   | 118.00 |     1 | 118.00 |
|      |      |      |  17.00 |     2 |  34.00 |
|      |      |      |        |       |   0.00 |
|      |      |      |        |       | 384.47 |
|------+------+------+--------+-------+--------|
     
#+TBLFM: $6=$4*$5;%.2f::@6$6=vsum(@2$6..@5$6);%.2f

*Re-align and field motion*

C-c C-c  (org-table-align)
       Re-align the table and don't move to another field.
<TAB>    (org-table-next-field)
       Re-align the table,move to next field.Creates a new row if necessary.
S-<TAB> (org-table-previous-field)
       Re-align,move to previous field.
<RET>    (org-table-next-row)
       Re-align the table and move down to next row.Creates a new row if necessary.At the beginning or end of a line,<RET> still does NEWLINE,so it can be used to split a table.
M-a      (org-table-beginning-of-field)
       Move to beginning of the current table field,or on to the previous field.
M-e      (org-table-end-field)
       Move to end of the current table field,or on to the next field.

*column and row editing*

M-<left>  (org-table-move-column-left)
M-<right> (org-table-move-column-right)

M-S-<left>  (org-table-delete-column)
     Kill the current column.
M-S-<right> (org-table-insert-column)
     Insert a new column to the left of the cursor position.
M-<up>     (org-table-move-row-up)
M-<down>   (org-table-move-row-down)
     Move the current row up/down.

M-S-<up>   (org-table-kill-row)
     Kill the current row or horizontal line.
M-S-<down> (org-table-insert-row)
     Insert a new row above the current row. With a prefix argument,the line is created below the current one.

C-c -      (org-table-insert-hline)
     Insert a horizontal line below current row.With a prefix argument,the line is Created above the current line.

C-c <RET>  (org-table-hline-and-move)
     Insert a horizontal below current row,and move the cursor into the row below that line.

C-c ^     (org-table-sort-lines)
    Sort the table lines in the region. The position of point indicates the column to be used for sorting, and the range of lines is the range between the nearest horizontal separator lines, or the entire table. If point is before the first column, you will be prompted for the sorting column. If there is an active region, the mark specifies the first line and the sorting column, while point should be in the last line to be included into the sorting. The command prompts for the sorting type (alphabetically, numerically, or by time). When called with a prefix argument, alphabetic sorting will be case-sensitive. 

*Regions*

C-c C-x M-w     (org-table-copy-region)
    Copy a rectangular region from a table to a special clipboard. Point and mark determine edge fields of the rectangle. If there is no active region, copy just the current field. The process ignores horizontal separator lines.
C-c C-x C-w     (org-table-cut-region)
    Copy a rectangular region from a table to a special clipboard, and blank all fields in the rectangle. So this is the "cut" operation.
C-c C-x C-y     (org-table-paste-rectangle)
    Paste a rectangular region into a table. The upper left corner ends up in the current field. All involved fields will be overwritten. If the rectangle does not fit into the present table, the table is enlarged as needed. The process ignores horizontal separator lines.
M-<RET>     (org-table-wrap-region)
    Split the current field at the cursor position and move the rest to the line below. If there is an active region, and both point and mark are in the same column, the text in the column is wrapped to minimum width for the given number of lines. A numeric prefix argument may be used to change the number of desired lines. If there is no region, but you specify a prefix argument, the current field is made blank, and the content is appended to the field above.

*Calculations*

C-c +     (org-table-sum)
    Sum the numbers in the current column, or in the rectangle defined by the active region. The result is shown in the echo area and can be inserted with C-y.
S-<RET>     (org-table-copy-down)
    When current field is empty, copy from first non-empty field above. When not empty, copy current field down to next row and move cursor along with it. Depending on the option org-table-copy-increment, integer field values will be incremented during copy. Integers that are too large will not be incremented. Also, a 0 prefix argument temporarily disables the increment. This key is also used by shift-selection and related modes (see Conflicts).
    Miscellaneous

C-c `     (org-table-edit-field)
    Edit the current field in a separate window. This is useful for fields that are not fully visible (see Column width and alignment). When called with a C-u prefix, just make the full field visible, so that it can be edited in place. When called with two C-u prefixes, make the editor window follow the cursor through the table and always show the current field. The follow mode exits automatically when the cursor leaves the table, or when you repeat this command with C-u C-u C-c `.
M-x org-table-import RET
    Import a file as a table. The table should be TAB or whitespace separated. Use, for example, to import a spreadsheet table or data from a database, because these programs generally can write TAB-separated text files. This command works by inserting the file into the buffer and then converting the region to a table. Any prefix argument is passed on to the converter, which uses it to determine the separator.
C-c |     (org-table-create-or-convert-from-region)
    Tables can also be imported by pasting tabular text into the Org buffer, selecting the pasted text with C-x C-x and then using the C-c | command (see above under Creation and conversion).
M-x org-table-export RET
    Export the table, by default as a TAB-separated file. Use for data exchange with, for example, spreadsheet or database programs. The format used to export the file can be configured in the option org-table-export-default-format. You may also use properties TABLE_EXPORT_FILE and TABLE_EXPORT_FORMAT to specify the file name and the format for table export in a subtree. Org supports quite general formats for exported tables. The exporter format is the same as the format used by Orgtbl radio tables, see Translator functions, for a detailed description. 

*Plot Options*

set
    Specify any gnuplot option to be set when graphing.
title
    Specify the title of the plot.
ind
x    Specify which column of the table to use as the x axis.
deps
    Specify the columns to graph as a Lisp style list, surrounded by parentheses and separated by spaces for example dep:(3 4) to graph the third and fourth columns (defaults to graphing all other columns aside from the ind column).
type
    Specify whether the plot will be 2d, 3d, or grid.
with
    Specify a with option to be inserted for every col being plotted (e.g., lines, points, boxes, impulses, etc...). Defaults to lines.
file
    If you want to plot to a file, specify "path/to/desired/output-file".
labels
    List of labels to be used for the deps (defaults to the column headers if they exist).
line
    Specify an entire line to be inserted in the Gnuplot script.
map
    When plotting 3d or grid types, set this to t to graph a flat mapping rather than a 3d slope.
timefmt
    Specify format of Org mode timestamps as they will be parsed by Gnuplot. Defaults to "%Y-%m-%d-%H:%M:%S".
script
    If you want total control, you can specify a script file (place the file name between double-quotes) which will be used to plot. Before plotting, every instance of $datafile in the specified script will be replaced with the path to the generated data file. Note: even if you set this option, you may still want to specify the plot type, as that can impact the content of the data file. 


C-c = "column Formulas"
vsum  "sum"
C-u C-c * "Recalculate all"
C-c * "Recalculate line"
C-c ` "Edit Formulas"

关于中英文混排的格式问题



Entered on [2013-05-31 五 08:41]
 
 [[file:~/org/gtd.org::*emacs][emacs]]
**** emacs matlab 应用
我的配置文件jhp-matlab.el

;;=================matlab set =====================

(add-to-list 'load-path "~/.emacs.d/matlab-emacs/matlab-emacs")
(require 'matlab-load)
(autoload 'matlab-mode "matlab" "Enter MATLAB mode." t)
(setq auto-mode-alist (cons '("\\.m\\'" . matlab-mode) auto-mode-alist))
(autoload 'matlab-shell "matlab" "Interactive MATLAB mode." t)
(setq matlab-verify-on-save-flag nil) ; turn off auto-verify on save
(defun my-matlab-mode-hook ()
  (setq fill-column 76)) ; where auto-fill should wrap
(add-hook 'matlab-mode-hook 'my-matlab-mode-hook)
(defun my-matlab-shell-mode-hook ()
  '())
(add-hook 'matlab-shell-mode-hook 'my-matlab-shell-mode-hook)
(global-font-lock-mode t)
                                        ;(matlab-mode-hilit)

Entered on [2013-05-31 五 13:17]
 
 [[file:~/org/gtd.org::*matlab][matlab]]
** 2013-06 六月
*** 2013-06-01 星期六
**** 博宏讲堂第六周
市场部：欧阳宇峰
荡秋千原理
荡秋千原理：只要持之以恒、平地而趋的秋千甚至可以立上云路。
1.荡秋千原理1：
秋千所荡到的高度与第一次加力是分不开的，任何一次偷懒都会降低你的高度，所以动作虽然简单依然要一丝不苟地”踏实“。
2.荡秋千原理2：
后一次达到的高度与前一次是分不开的，环环相扣的”踏实“可以达到分散几次望尘莫及的效果。
3.荡秋千原理3：
秋千荡得越高，所拥有的空间就越大，所拥有的机会也就更多，你需要学会欣赏和知螟。
4.荡秋千原理4：
秋千会从高处滑落到低处，就像人生中一些不可回避的憾，或许是个错误。每一次都要鼓起勇气从最低处坚持着走出来，没有一次次的低谷，换不来更高处的清风扑面。
4.荡秋千原理5：
每一次荡起来，都会在心中定下一个将要达到的高度为目标，达到梦想的高度，你会更开心！

Entered on [2013-06-01 六 07:53]
 
 [[file:~/org/gtd.org::*%E5%8D%9A%E5%AE%8F%E8%AE%B2%E5%A0%82][博宏讲堂]]
*** 2013-06-02 星期日
**** latex 中的表格绘制
横向表格

\begin{sidewaystable}

\centering

\begin{tabular}{lllll}

\hline

Item 1 & Item 2 &Item 3 &Item 4 &Item 5 \\

\hline

\multicolumn{5}{l}{\bf S item 1}\\

a & b & c &d &e\\

a & b & c &d &e\\

a & b & c &d &e\\

a & b & c &d &e\\

a & b & c &d &e\\

&&&&\\

\multicolumn{5}{l}{\bf S item 2}\\

a & b & c &d &e\\

a & b & c &d &e\\

a & b & c &d &e\\

a & b & c &d &e\\

a & b & c &d &e\\

\hline

\end{tabular}

\caption{This is an example of rotate table layout}\label{rotatetable}

\end{sidewaystable} 

Entered on [2013-06-02 日 07:47]
 
 [[file:~/org/gtd.org::*latex][latex]]
**** emacs 的窗口操作

垂直分割：C-x 2 本机中 M-2
水下分割：C-x 3       M-3
窗口切换：C-x o       M-o
只保留1个窗口：C-x 1  M-1

***** emacs org gtd 的配置
***** 我的GTD的规划与使用
Entered on [2013-05-29 三 12:31]
#+BEGIN_DITAA  asciiExampleWithColorAndTypeUtf8.png -e gb2312

              +------------+     +------------+
              | 中文 | ----> |   | 中文 |  
              |      |       |   |      |
              +------------+     +------------+

#+END_DITAA 
 [[file:~/org/gtd.org::*emacs][emacs]]

***** my .emacs file of emacs
(setq plugins (expand-file-name "~/.emacs.d/plugins/" ))
(add-to-list 'load-path plugins)
(setq default-directory "~/org/")

(require 'cedet)
(global-ede-mode t)
(require 'semantic)
(require 'latex-frame-mode)

;;==================================
;;chinese font set
;;==================================
;;font 13
(set-default-font "13")

;;(set-language-environment 'utf-8)
(set-language-environment 'Chinese-GB)
(set-keyboard-coding-system 'utf-8)
(set-clipboard-coding-system 'utf-8)
(set-terminal-coding-system 'utf-8)
(set-buffer-file-coding-system 'utf-8)
(set-default-coding-systems 'utf-8)
(set-selection-coding-system 'utf-8)
(modify-coding-system-alist 'process "*" 'utf-8)
(setq default-process-coding-system '(utf-8,utf-8))
(setq-default pathname-coding-system 'utf-8)
;;(set-file-coding-system 'utf-8)
(setq ansi-color-for-comint-mode t)

(prefer-coding-system 'utf-8)
;;(setq coding-system-for-read 'utf-8)
;;(setq coding-system-for-write 'utf-8)

(setq make-backup-files nil)


(setq default-process-coding-system 
      '(utf-8 . utf-8))
(setq-default pathname-coding-system 'utf-8)

;;==========================================
;;外观设置
;;==========================================

;;禁用启动画面
(setq inhibit-startup-message t)

;;禁用工具栏
(tool-bar-mode -1)

;;禁用滚动栏
(scroll-bar-mode -1)

;;光标靠近鼠标的时候，让鼠标自动让开
(mouse-avoidance-mode 'animate)

;;禁用菜单栏，F10开启关门菜单
(menu-bar-mode nil)

;;========================================
;;键绑定
;;========================================

;;C-z 设置标记,M-x iconify-or-deiconify-frame:C-z,C-x C-z
(global-set-key (kbd "C-z") 'set-mark-command)

;;F10显示/隐藏菜单栏;;M-x menu-bar-open
(global-set-key [(f10)] 'menu-bar-mode)

;;WIN+s进入shell;; M-x shell
(global-set-key (kbd "s-s") 'shell)

;;WIN+space 设置标记
(global-set-key (kbd "s-SPC") 'set-mark-command)

;;=======================================
;;设置缓冲区
;;=======================================

;;设定行距
(setq default-line-spacing 4)

;;页宽
(setq default-fill-column 60)

;;缺省模式 text-mode
(setq default-major-mode 'text-mode)

;;页面平滑滚动，scroll-margin 3 靠近屏幕边沿3行时开始滚动，可以很好地看到上下文
(setq scroll-margin 3
      scroll-conservatively 10000)

;;高亮显示成对括号，但不来回弹跳
(show-paren-mode t)
(setq show-paren-style 'parentheses)

;;粘贴于光标处，而不是鼠标处
(setq mouse-yank-at-point t)

;;======================================
;;回显区
;;======================================

;;闪屏报警
(setq visible-bell t)

;;使用y or n 提问
(fset 'yes-or-no-p 'y-or-n-p)

;;锁定行高
(setq resize-mini-windows nil)

;;递归minibuffer
(setq enable-recursive-minibuffers t)

;;===================================
;;状态栏
;;===================================

;;显示时间
(display-time)
;;时间格式
(setq display-time-24hr-format t)
(setq display-time-day-and-date t)
(setq display-time-interval 10)

;;显示列号
(setq column-number-mode t)

;;标题栏显示 %f 缓冲区完整路径 %p 页面百分数 %l 行号
(setq frame-title-format "%f")

;;==================================
;;编辑设定
;;==================================

;;不生成临时文件
(setq-default mark-backup-files nil)

;;只渲染当前屏幕语法高亮，加快显示速度
;;(setq lazy-lock-mode t)
;;(setq font-lock-support-mode 'lazy-lock-mode)
;;(setq font-lock-maximum-decoration t)

;;将错误信息显示在回显区
(condition-case err
    (progn
      (require 'xxx))
  (error
   (message "Can't load xxx-mode %s" (cdr err))))

;;使用x剪切板
(setq x-select-enable-clipboard t)
;;设定剪贴板内容形式 适应firefox
(set-clipboard-coding-system 'ctext)


;;在标题栏显示buffer的名字，而不是默认的没用的显示
(setq frame-title-format "emacs@%b")
;;括号匹配时显示另外一边的括号，不跳光标
(setq show-paren-style 'parentheses)

;;==================配色方案设置=====================

(add-to-list 'load-path "/usr/share/emacs/site-lisp")

(require  'color-theme)
(color-theme-initialize)
(color-theme-dark-blue2)

;;---------------color setup------------------------

;;==================全屏设置=======================

(defun toggle-fullscreen (&optional f)
(interactive)
  (let ((current-value (frame-parameter nil 'fullscreen)))
    (set-frame-parameter nil 'fullscreen
			 (if (equal 'fullboth current-value)
			     (if (boundp 'old-fullscreen) old-fullscreen nil)
			   (progn (setq old-fullscreen current-value)
				  'fullboth)))))
(global-set-key [f11] 'toggle-fullscreen)

(add-hook 'after-make-frame-functions 'toggle-fullscreen)
;;-------------------end-------------------------

;;=================设置个人信息====================

(setq user-full-name "jhsygg")
(setq user-mail-address "jhsygg@126.com")

;;-------------------end-------------------------

;;===============load 配置文件=====================

(load "jdp-calendar")
(load "jdp-latex")
(load "jdp-w3m")
(load "jdp-weather")
(load "jdp-yasnippet")
(load "jdp-ac")
(load "jdp-php")
;;(load "jdp-org")
;;(load "emacs-emms")
;;(load "jdp-c")
(load "jdp-mysql")
(require 'reftex)

;;----------------end----------------------------

;;c/c++环境配置
;;================================================


;;如何让emacs启动后就最大化？
(setq default-frame-alist
      '(
	(top . 30)
	(life . 30)
	(width . 130)
	(hight . 70)
	)
      )

;;显示列号
(setq column-number-mode t)
(setq line-number-mode t)
;;LaTeX 模式下，不打开自动折行
;;(turn-off-auto-fill)

;;显示行数
(global-linum-mode t)

;;打开自动补会
(auto-complete-mode 1)

(load "desktop")
(desktop-load-default)
(desktop-read)

;;=================多媒体emms=================
(setq emms-player-list '(emms-player-mpg123
			 emms-player-mpg321
			 emms-player-ogg123
			 emms-player-mplayer))

;;------------------end-----------------------

;;=====================
;;org-mode
;;=====================
(require 'org-install)
(require 'org-publish)
(add-to-list 'auto-mode-alist '("\\.org\\'" . org-mode))
(add-hook 'org-mode-hook 'turn-on-font-lock)

(autoload 'org-mode "org" "Org mode" t)
(autoload 'org-diary "org" "Diary entries from Org mode")
(autoload 'org-agenda "org" "Multi-file agenda from Org mode" t)
(autoload 'org-store-link "org" "Store a link to the current location" t)
(autoload 'orgtbl-mode "org" "Org tables as a minor mode" t)
(autoload 'turn-on-orgtbl "org" "Org tables as a minor mode")

(global-set-key "\C-cl" 'org-store-link)
(global-set-key "\C-cc" 'org-capture)
(global-set-key "\C-ca" 'org-agenda)
(global-set-key "\C-cb" 'org-iswitchb)
(global-set-key "\C-c." 'org-time-stamp)
;;自动换行
;;(setq org-hide-leading-stars t)
(setq org-enable-table-editor 1)
(setq org-log-done t)
(setq org-log-done '(done))
(setq org-agenda-include-diary t)

(add-hook 'org-mode-hook
	  (lambda ()
	    (setq truncate-lines nil)
	    (smiley-buffer (current-buffer))
	    (set-fill-column 70)))

;;capture template
(setq org-directory "~/org/")
(setq org-capture-templates
      '(("t" "Todo" entry (file-headline "~/org/gtd.org" "Tasks")
	 "* TODO" %?\n $i\n %a)
	("j" "Jhsygg" entry (file+datetree "~/org/jhsygg.org")
	 "* %?\nEntered on %U\n %i\n %a")
	("s" "Study" entry (file+datetree "~/org/study.org")
	 "* %?\nEntered on %U\n %i\n %a")
	("h" "Home" entry (file+datetree "~/org/home.org")
	 "* %?\nEntered on %U\n %i\n %a")
	))

(setq org-agenda-files (list "~/org/gtd.org"
			     "~/org/jhsygg.org"
			     "~/org/notes.org"
			     "~/org/study.org"
			     "~/org/tasks.org"
			     "~/org/home.org"))

;;Emacs TODO 模式的相关文件
;;========================
(setq todo-file-do "~/.emacs.d/todo-do")
(setq todo-file-done "~/.emacs.d/todo-done")
(setq todo-file-top "~/.emacs.d/todo-top")

(setq org-todo-keywords '((sequence "TODO" "APPT" "STARTED" "DONE")))
(defun gtd ()
    (interactive)
    (find-file "~/org/gtd.org"))
(global-set-key (kbd "C-c g") 'gtd)

(add-hook 'org-agenda-mode-hook 'hl-line-mode)

(setq org-clock-persist 'history)
(org-clock-persistence-insinuate)

(setq org-log-done 'time)
(setq org-log-done 'note)
(setq org-use-fast-tag-selection t)
;;-------------------org-mode end----------------------

(require 'xcscope)

;;====================================
;;半透明窗口设置
;;====================================
(global-set-key [f12] 'loop-alpha);;全局绑定F12键为功能键
(setq alpha-list '((100 100)(85 50)(75 45)(65 35)(55 25)));;当前和非当前窗口时透明度分别为85、50
(defun loop-alpha()
  (interactive)
  (let ((h (car alpha-list)))
    ((lambda (a ab)
       (set-frame-parameter (selected-frame) 'alpha (list a ab))
       (add-to-list 'default-frame-alist (cons 'alpha (list a ab))))
     (car h)(car (cdr h)))
    (setq alpha-list (cdr (append alpha-list (list h))))))

;;=======================================
;;mew 邮件收发设置
;;=======================================
(add-to-list 'load-path "/usr/share/emacs/site-lisp/mew/") 
(autoload 'mew "mew" nil t)
(autoload 'mew-send "mew" nil t)
(if (boundp 'read-mail-command)
    (setq read-mail-command 'mew))
(autoload 'mew-user-agent-compose "mew" nil t)
(if (boundp 'mail-user-agent)
    (setq mail-user-agent 'mew-user-agent))
(if (fboundp 'define-mail-user-agent)
    (define-mail-user-agent
      'mew-user-agent
      'mew-user-agent-compose
      'mew-draft-send-message
      'mew-draft-kill
      'mew-send-hook))

(setq mew-pop-size 0)
(setq mew-smtp-auth-list nil);;("CRAM-MD5" "LOGIN" "PLAIN"))
(setq mew-pop-delete nil)
(setq toolbar-mail-reader 'Mew)
(set-default 'mew-decode-quoted 't)  
(setq mew-prog-pgp "gpg")
(setq mew-name "jhsygg")
(setq mew-user "jhsygg")
(setq mew-smtp-user "jhsygg")
(setq mew-mail-domain "www.126.com")
(setq mew-smtp-auth-list nil)
(setq mew-smtp-server "smtp.126.com")
(setq mew-pop-server "pop.126.com")
(setq mew-pop-user "jhsygg")
(setq mew-pop-auth 'pass) 
(setq mew-use-cached-passwd t)
;;(setq mew-nntp-server "nntp.126.com")
;;(setq mew-icon-directory (expand-file-name "mew/etc" dtsite-dir))
(when (boundp 'utf-translate-cjk)
  (setq utf-translate-cjk t)
  (custom-set-variables
   '(utf-translate-cjk t)))
(if (fboundp 'utf-translate-cjk-mode)
    (utf-translate-cjk-mode 1)) 
(require 'flyspell)
;;----------------mew end---------------------

(put 'upcase-region 'disabled nil)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ac-sources (quote (ac-source-yasnippet ac-source-abbrev ac-source-words-in-buffer ac-source-files-in-current-dir ac-source-filename)) t)
 '(ansi-color-names-vector ["#242424" "#e5786d" "#95e454" "#cae682" "#8ac6f2" "#333366" "#ccaa8f" "#f6f3e8"])
 '(column-number-mode t)
 '(custom-enabled-themes (quote (light-blue)))
 '(display-time-mode t)
 '(org-agenda-files (quote ("~/org/gtd.org" "~/org/jhsygg.org" "~/org/notes.org" "~/org/study.org")))
 '(show-paren-mode t)
 '(tool-bar-mode nil))

;;=================matlab set =====================

(add-to-list 'load-path "~/.emacs.d/matlab-emacs/matlab-emacs")
(require 'matlab-load)
(autoload 'matlab-mode "matlab" "Enter MATLAB mode." t)
(setq auto-mode-alist (cons '("\\.m\\'" . matlab-mode) auto-mode-alist))
(autoload 'matlab-shell "matlab" "Interactive MATLAB mode." t)
(setq matlab-verify-on-save-flag nil) ; turn off auto-verify on save
(defun my-matlab-mode-hook ()
  (setq fill-column 76)) ; where auto-fill should wrap
(add-hook 'matlab-mode-hook 'my-matlab-mode-hook)
(defun my-matlab-shell-mode-hook ()
  '())
(add-hook 'matlab-shell-mode-hook 'my-matlab-shell-mode-hook)
(global-font-lock-mode t)
                                        ;(matlab-mode-hilit)
(autoload 'tlc-mode "tlc" "tlc Editing Mode" t)
(add-to-list 'auto-mode-alist '("\\.tlc$" . tlc-mode))
(setq tlc-indent-function t)

(setq tab-width 4 indent-tabs-mode nil)

;;------------------matlab end---------------------

;;==================窗口操作 set=========================

;;关闭当前窗口
(global-set-key (kbd "M-4") 'delete-windows)
;;(global-set-key (kbd "M-4") 'kill-this-buffer)
;;关闭其他窗口，alt+1
(global-set-key (kbd "M-1") 'delete-other-windows)
;;水平分割窗口,alt+2
(global-set-key (kbd "M-2") 'split-window-vertically)
;;垂直分割窗口,alt+3
(global-set-key (kbd "M-3") 'split-window-horizontally)
;;切换到其他窗口
(global-set-key (kbd "M-0") 'other-window)
;;显示缓冲区完整名称
(global-set-key (kbd "M-5") 'display-buffer-name)

;;------------------窗口操作 end-------------------

;;==========键绑定，f1--帮助设置=================

(global-set-key [f1] 'manual-entry)
(global-set-key [C-f1] 'info)

;;==================================
;;将光标改成一个竖线
;;==================================

(require 'cursor-change)
(cursor-change-mode 1)

;;==================================
;;emacs 主题设置
;;==================================


;;============el-get set==================

(add-to-list 'load-path "~/.emacs.d/el-get/el-get")

(unless (require 'el-get nil 'noerror)
  (with-current-buffer
      (url-retrieve-synchronously
       "https://raw.github.com/dimitri/el-get/master/el-get-install.el")
    (goto-char (point-max))
    (eval-print-last-sexp)))

(add-to-list 'el-get-recipe-path "~/.emacs.d/el-get-user/recipes")
(el-get 'sync)

(add-to-list 'load-path "~/.emacs.d/el-get/org-table-comment")
(require 'org-table-comment)

(add-to-list 'load-path "~/.emacs.d/el-get/php-mode")
(require 'php-mode)

;;===============el-get end====================

;;===============org-mode table 中英文对齐=================

;;英文设置如下：
;;(custom-set-faces
;; '(default ((t (:inherit nil :stipple nil 
;;			 :inverse-video nil :box nil :strike-through nil :verline nil
;;			 :underline nil :slant normal :weight normal :height 120
;;			 :width normal :foundry "unknown" :family "Liberation Mono")))))

;;中文设置如下：
;;(if (and (fboundp 'daemonp)(daemonp))
;;    (add-hook 'after-make-frame-functions
;;	      (lambda (frame)
;;		(with-selected-frame
;;		    (set-fontset-font "fontset-default"
;;				      'chinese-gbk "WenQuanYi Micro Kei Mono 15"))))
;;(set-fontset-font "fontset-default" 'chinese-gbk "WenQuanYi Micro Kei Mono 15"))

;;另外，为了column view能够在daemon模式下正常显示，还需要如下代码：
;;(defun wl-org-column-view-uses-fixed-width-face ()
;; copy from org-faces.el
;;  (when (fboundp 'set-face-attribute)
;; Make sure that a fixed-width face is used when we have a column table.
;;    (set-face-attribute 'org-column nil
;;                        :height (face-attribute 'default :height)
;;                        :family (face-attribute 'default :family))))

;;(when (and (fboundp 'daemonp) (daemonp))
;;  (add-hook 'org-mode-hook 'wl-org-column-view-uses-fixed-width-face))
;;====================table end====================
;;(custom-set-faces
;; custom-set-faces was added by Custom.
;; If you edit it by hand, you could mess it up, so be careful.
;; Your init file should contain only one such instance.
;; If there is more than one, they won't work right.
;;)

;;(add-to-list 'load-path "~/.emacs.d/site-lisp/")
;;(require 'eide)
;;(eide-start)
;;(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 ;;)

;;=================twittering-mode====================

;;(require 'twittering-mode)
;;(setq twittering-use-master-password t)
;;一些网站（如sina）不喜欢SSL
;;(setq twittering-allow-insecure-server-cert t)
;;(setq twittering-oauth-use-ssl nil)

;;(twittering-enable-unread-status-notifier)
;;(setq-default twittering-icon-mode t)

;;(setq twittering-initial-timeline-spec-string `(":home@sina";
;;						":home@douban"))

;;-------------------twittering end-------------------

;;============weibo setup==================

;;(add-to-list 'load-path "~/.emacs.d/weibo")
;;(require 'weibo)

(add-to-list 'load-path "~/.emacs.d/el-get/google-maps")
(require 'google-maps)

Entered on [2013-06-02 日 12:03]
 
 [[file:~/org/gtd.org::*%E8%AE%A1%E7%AE%97%E6%9C%BA][计算机]]

**** What is Emacs?
***** What is Emacs
****** Emacs is an Editor for text files
****** While it has mouse commands,it is at its best whih keyboard commands
****** Self-documenting
****** Highly customizable
****** Highly expandable
****** Modes (Major and Minor)
***** Why Emacs as Org-mode Base?
****** Emacs is old,but still heavuly used among scientists and programmers
****** Ultra-portable platform for running code like a Java virtual machine
****** Many other useful systems run in Emacs:Mailers,Newsgroup Readers,even webbrowsers.This is good for integration of a note-taking system without relying on a vendor like Apple to do it for you
***** Working with text Files? That is so 1970s! Or is it?
****** The only truly portable format,read and edit anywhere,anytime
****** Never get locked into proprietary software or file formats
****** Can be easily processed with other tools
****** Problem-free history with version control
***** Org-mode as an outliner
****** Almost everything that has to be structured can be represented as an outline
****** Org-mode makes capturing,writing,editing,and restructuring information and notes very simple
****** Outlines are also the basic structure of books,scientific papaers,and presentations
***** Tracking Scientufic Projects. What can be done in a single document?
****** notes,notes,notes
****** the project schedule and due dates
****** defailed log of ections and progress
****** a complete specification of the steps taken in data analysis;
****** an article for publication
****** a digital slide show;
****** a facility to track data acquisition graphically
****** and more...
***** Exporting and Publishing
****** HTML
****** DocBook
****** LaTeX,as gateway to PDF,great for scientific notes
****** BERMER Presentation (also vie LaTeX)
****** ASCII,are bery readable email format(even though Org files are already readable)
****** Sets of documents can be linked to a Publishing project
***** Further scientific toos
****** Embedding LaTeX for formulas and more
****** Embedding arbitrary source code snippets
****** Executing code snippets in many languages
****** Capturing results to cteats
****** Reproducible Research
****** Literal Programming

***** Embedding LaTeX

The Greek letters \alpha, \beta, and \gamma are used to denote angles.
The /sinus theorem/ can then be written as 

\begin{equation}
\frac{\sin\alpha}{a}=\frac{\sin\beta}{b}
\end{equation}

***** Literal Programming
****** Let us change our traditional attitude to the construction of programs:Instead of imagining that our main task is to instruct a computer what to do, let us concentrate rather on explaining to human beings what we want a computer to do.
****** Two operations
******* Weave a readable document
******* Tangle the computer source code

***** Reproducible Research
****** Combining scientific results with the tools that were used to produce them
****** Make the publication a self-contained laboratory for Reproducing the results

***** Users of Org-mode
****** An archaeologist running an archaeology company
****** A farmer and mountaineer
****** Scientists from various fields
****** Computer scientists
****** One-person consultancy companies
****** Director of Computer Science company and University Research group
****** A historian
****** A blind person,running his world through Emacs
****** Head of IT group at the Max-Planck-Institute for Neurological Research :-)

***** Twitter-length statements
****** The sheer elaborated insanity of the Org-mode spreadsheet is a distilled microcosm of all that is wonderful and brain-damaged about emacs. Zenoli 
****** If I hated everything about Emacs,I'd still use it for Org-mode. Avdi
****** It used to be that I hated leaving Emacs to do anything;now it's getting to the point that I hate even leaving Org-mode! Eric Fraga
****** If humans could mate with software,I'd have Org-mode's babies. Chris League

***** gtd是什么
****** GTD(Getting Things Done)是美国的商业顾问David Allen提倡的一种提高生产效率的时间管理系统。利用GTD可以缓解压力，专心地工作，学习。详细可以参考他的两部书《尽管去做：无压力工作的艺术》，《结果第一：平移工作和生活的52条原则》。
Org-Mode是为emacs编写的个人信息管理以及编写大纲的工具。因为Emacs强大的特性，用其来实践GTD系统是再方便不过的了，这里我将介绍一些org-mode的特性。

******* 操作方法
******** 收集
调用remember-mode(C-c r)
选择 Todo (GTD) 或者是notes
选择情境标签 (OFFICE,HOME,READING,DVD,etc...)
选择 Todo的状态 (TODO,STARTED,WAITING,etc...)
设置任务结束时间 (C-c C-d)
设备任务开始时间 (C-c C-s)

******** 每天的操作
首先确认当天的任务

确认当天所有的任务 (C-c a d)
利用情境确认当天的预定任务 (C-c a h)
在时间轴上确认任务 (C-c a L)
任务由 TODO 状态转换为 DONE 状态(C-c C-t或者shift+左右)
如果有新的预定使用，remember-mode(F8)来添加任务

******** 周回顾
打开org文件 (C-c g)
检查INBOX中积攅的任务
选择合适的项目分类 (C-c C-w)
设置任务的结束时间 (C-c C-d)
设置任务的开始时间 (C-c C-s)

******* org-mode 的设置
*** 2013-06-03 星期一
**** 学习《尽量去做--无压力工作的艺术》
Entered on [2013-06-03 一 16:31]
 
 [[file:~/org/gtd.org::*%E4%BA%BA%E5%8A%9B%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86][人力资源管理]]
*** 2013-06-04 星期二
**** org gtd 
| 状态（快捷键） | 完成状态 | 说明                                                      | 回顾周期 |
|----------------+----------+-----------------------------------------------------------+----------|
|                |          | 无状态标示尚未开始整理，一般位于Inbox                     |          |
| TODO(t)        |          | 最基本的任务状态，现在要做，但还没计划做的时间            |          |
| NEXT(n)        |          | 下一步行动，还未开始计划                                  |          |
| SOMEDAY(s)     |          | 想法，还没决定是否开始行动                                |          |
| DONE(d)        | 是       | 已经完成，需要记录完成时间和备注说明，转移到finished.org  |          |
| ABOUT(a)       | 是       | 取消的任务，需要说明取消原因，转移到trash.org的相应节点中 |          |
| WAITTING(w)    |          | 等待其他人完成                                            |          |

2.1 文件的划分
Org-mode 管理的基本单位是文件，尽管可以将所有的任务放到同一个文件中，但这样不利于管理，所以要首先规划文件的划分。

根据自己的需要，设计了6个文件：

- inbox 收集箱，用于收集未整理的信息
- task 待办事项，记录所有未完成的事项。但不包括项目内容。
  - Tasks 任务
    - 没有时间点的事项为“待办事项”
    - 有时间点的待办事项为“日程安排”
    - 有时间间隔的待办事项为“周期性任务”
  - Ideas 想法
- finished 完成的任务会迁移到这里
  - Tasks 完成的任务
  - Joumal 日志，按照时间范围组织结构，可以将完成的任务转移到这里
- note 笔记，临时存储一些以后可能会用到的资料。note会逐步转移到真正的笔记本中。
- trash 回收站，取消的任务，不需要的信息和资料等迁移到这里，等待删除，按类型区分。
  - Tasks
  - Idea
  - Notes
- project 项目，专门收集非单独的，项目相关的事项。完成的项目实现不会迁移到finished中，项目日志和总结等都在这个文件中完成。
  - 每个项目一条，以项目名称/简称作为标签
  - 统一的标签：Proj

2.3 标签设计
1、情境标签，表明该任务应该在何种环境下完成
@Office 办公室
@Home 在家
@Computer 有计算机的时候
@Call 打电话
@Way 在路上或外出
@Lunchtime 午休时间

2、分类标签
所有的项目具有标签“Project”
其他的分类自行定义

任务状态

| 事件（快捷键） | 容器        | 模板                                               |
|----------------+-------------+----------------------------------------------------|
| New(n)         | inbox.org   | 收件箱，收集未整理的信息                           |
| Task(t)        | task.org    | 待办事项，所有完成的事情                           |
| Calendar(c)    | task.org    | 日程安排，具有明确时间的待办实现，可以是周期性任务 |
| Idea(!)        | task.org    | 想法、愿望                                         |
| Note(r)        | note.org    | 笔记，最终会被移到真正的笔记本                     |
| Project(p)     | project.org | 项目任务                                           |

对应的模板配置：

(org-remember-insinuate) (setq org-directory "~/Documents/Dropbox/0.GTD/") (setq org-remember-templates '(("New" ?n "* %? %t \n %i\n %a" "~/Documents/Dropbox/0.GTD/inbox.org" ) ("Task" ?t "** TODO %?\n %i\n %a" "~/Documents/Dropbox/0.GTD/task.org" "Tasks") ("Calendar" ?c "** TODO %?\n %i\n %a" "~/Documents/Dropbox/0.GTD/task.org" "Tasks") ("Idea" ?i "** %?\n %i\n %a" "~/Documents/Dropbox/0.GTD/task.org" "Ideas") ("Note" ?r "* %?\n %i\n %a" "~/Documents/Dropbox/0.GTD/note.org" ) ("Project" ?p "** %?\n %i\n %a" "~/Documents/Dropbox/0.GTD/project.org" %g) )) (setq org-default-notes-file (concat org-directory "/inbox.org"))

使用模板参数能带来很多便捷。比如上面的Project模板，在收集的时候能够根据选择的项目名称，自动将任务插入到对应项目的条目下面。

常用的模板元素：

| 元素 | 说明                   |
|------+------------------------|
| %?   | 输入文字               |
| \n   | 插入换行符             |
| %i   | 插入选择区域           |
| %a   | 当前光标所在标题的链接 |
| %t   | 插入日期               |
| %T   | 插入日期和时间         |
| %^g  | 从目标窗口的标签中选择 |
| %^G  | 从全局标签中选择       |
| %^i  | 输入日期时间           |

2.6 定义转接(Refiling)
使用文件管理GTD，一定会需要将标题从一个节点移动到另一个节点。
org-mode 提供的C-c C-w 可以方便地在同一文件内移动节点。
对于不同文件之间的移动，也可以通过配置来实现快速移动，下面是一个例子：
'(org-refile-targets (quote (("newgtd.org" :maxlevel . 1)
                             ("someday.org" :level . 2))))
通过这样的设定，可以表示出“someday.org”文件中第二阶层的标题和“newgtd.org”文件中第一阶层的标题。

TODO			 

3 使用场景
3.1 快速收集信息
GTD工具通常会定义一个Inbox，用于快速记录想法、任务。万能的Inbox工具是纸和笔。
3.1.1 快速启动
在emacs 中使用命令 M-x org-remember,会打开一个新的buffer，输入一些内容后输入命令C-c C-c，就会将内容保存到文件中（默认是~/.notes）。

3.2 TODO 查看日程表

C-c a  a 本周事件 t 所有事件 m 查询标签 L 当前缓冲区时间线 s 查询关键词 T 查询带TODO关键词的项 M 查询带TODO关键词的标签 q 退出日程表

可以将多个org文件从日程表加入、移除，或者将日程表锁定在当前org文件的某个分支：

C-c [  将当前文件加入日程表。如果已经加入，移动到前面。
C-c ]  将当前文件从日程表中移除。
C-c C-x < 锁定到当前树（只显示当前树的事件）
C-c C-x > 解除树锁定


Entered on [2013-06-04 二 10:17]
 
 [[file:~/org/gtd.org::*emacs][emacs]]
*** 2013-06-06 星期四
**** my emacs setup
(setq plugins (expand-file-name "~/.emacs.d/plugins/" ))
(add-to-list 'load-path plugins)
(setq default-directory "~/org/")

(require 'cedet)
(global-ede-mode t)
(require 'semantic)
(require 'latex-frame-mode)

;;==================================
;;chinese font set
;;==================================
;;font 13
(set-default-font "13")

;;(set-language-environment 'utf-8)
(set-language-environment 'Chinese-GB)
(set-keyboard-coding-system 'utf-8)
(set-clipboard-coding-system 'utf-8)
(set-terminal-coding-system 'utf-8)
(set-buffer-file-coding-system 'utf-8)
(set-default-coding-systems 'utf-8)
(set-selection-coding-system 'utf-8)
(modify-coding-system-alist 'process "*" 'utf-8)
(setq default-process-coding-system '(utf-8,utf-8))
(setq-default pathname-coding-system 'utf-8)
;;(set-file-coding-system 'utf-8)
(setq ansi-color-for-comint-mode t)

(prefer-coding-system 'utf-8)
;;(setq coding-system-for-read 'utf-8)
;;(setq coding-system-for-write 'utf-8)

(setq make-backup-files nil)


(setq default-process-coding-system 
      '(utf-8 . utf-8))
(setq-default pathname-coding-system 'utf-8)

;;==========================================
;;外观设置
;;==========================================

;;禁用启动画面
(setq inhibit-startup-message t)

;;禁用工具栏
(tool-bar-mode -1)

;;禁用滚动栏
(scroll-bar-mode -1)

;;光标靠近鼠标的时候，让鼠标自动让开
(mouse-avoidance-mode 'animate)

;;禁用菜单栏，F10开启关门菜单
(menu-bar-mode nil)

;;========================================
;;键绑定
;;========================================

;;C-z 设置标记,M-x iconify-or-deiconify-frame:C-z,C-x C-z
(global-set-key (kbd "C-z") 'set-mark-command)

;;F10显示/隐藏菜单栏;;M-x menu-bar-open
(global-set-key [(f10)] 'menu-bar-mode)

;;WIN+s进入shell;; M-x shell
(global-set-key (kbd "s-s") 'shell)

;;WIN+space 设置标记
(global-set-key (kbd "s-SPC") 'set-mark-command)

;;=======================================
;;设置缓冲区
;;=======================================

;;设定行距
(setq default-line-spacing 4)

;;页宽
(setq default-fill-column 60)

;;缺省模式 text-mode
(setq default-major-mode 'text-mode)

;;页面平滑滚动，scroll-margin 3 靠近屏幕边沿3行时开始滚动，可以很好地看到上下文
(setq scroll-margin 3
      scroll-conservatively 10000)

;;高亮显示成对括号，但不来回弹跳
(show-paren-mode t)
(setq show-paren-style 'parentheses)

;;粘贴于光标处，而不是鼠标处
(setq mouse-yank-at-point t)

;;======================================
;;回显区
;;======================================

;;闪屏报警
(setq visible-bell t)

;;使用y or n 提问
(fset 'yes-or-no-p 'y-or-n-p)

;;锁定行高
(setq resize-mini-windows nil)

;;递归minibuffer
(setq enable-recursive-minibuffers t)

;;===================================
;;状态栏
;;===================================

;;显示时间
(display-time)
;;时间格式
(setq display-time-24hr-format t)
(setq display-time-day-and-date t)
(setq display-time-interval 10)

;;显示列号
(setq column-number-mode t)

;;标题栏显示 %f 缓冲区完整路径 %p 页面百分数 %l 行号
(setq frame-title-format "%f")

;;==================================
;;编辑设定
;;==================================

;;不生成临时文件
(setq-default mark-backup-files nil)

;;只渲染当前屏幕语法高亮，加快显示速度
;;(setq lazy-lock-mode t)
;;(setq font-lock-support-mode 'lazy-lock-mode)
;;(setq font-lock-maximum-decoration t)

;;将错误信息显示在回显区
(condition-case err
    (progn
      (require 'xxx))
  (error
   (message "Can't load xxx-mode %s" (cdr err))))

;;使用x剪切板
(setq x-select-enable-clipboard t)
;;设定剪贴板内容形式 适应firefox
(set-clipboard-coding-system 'ctext)


;;在标题栏显示buffer的名字，而不是默认的没用的显示
(setq frame-title-format "emacs@%b")
;;括号匹配时显示另外一边的括号，不跳光标
(setq show-paren-style 'parentheses)

;;==================配色方案设置=====================

(add-to-list 'load-path "/usr/share/emacs/site-lisp")

(require  'color-theme)
(color-theme-initialize)
(color-theme-dark-blue2)

;;---------------color setup------------------------

;;==================全屏设置=======================

(defun toggle-fullscreen (&optional f)
  (interactive)
  (let ((current-value (frame-parameter nil 'fullscreen)))
    (set-frame-parameter nil 'fullscreen
			 (if (equal 'fullboth current-value)
			     (if (boundp 'old-fullscreen) old-fullscreen nil)
			   (progn (setq old-fullscreen current-value)
				  'fullboth)))))
(global-set-key [f11] 'toggle-fullscreen)

(add-hook 'after-make-frame-functions 'toggle-fullscreen)
;;-------------------end-------------------------

;;=================设置个人信息====================

(setq user-full-name "jhsygg")
(setq user-mail-address "jhsygg@126.com")

;;-------------------end-------------------------

;;===============load 配置文件=====================

(load "jdp-calendar")
(load "jdp-latex")
(load "jdp-w3m")
(load "jdp-weather")
(load "jdp-yasnippet")
(load "jdp-ac")
(load "jdp-php")
;;(load "jdp-org")
;;(load "emacs-emms")
;;(load "jdp-c")
(load "jdp-mysql")
(require 'reftex)

;;----------------end----------------------------

;;c/c++环境配置
;;================================================


;;如何让emacs启动后就最大化？
(setq default-frame-alist
      '(
	(top . 30)
	(life . 30)
	(width . 130)
	(hight . 70)
	)
      )

;;显示列号
(setq column-number-mode t)
(setq line-number-mode t)
;;LaTeX 模式下，不打开自动折行
;;(turn-off-auto-fill)

;;显示行数
(global-linum-mode t)

;;打开自动补会
(auto-complete-mode 1)

(load "desktop")
(desktop-load-default)
(desktop-read)

;;=================多媒体emms=================
(setq emms-player-list '(emms-player-mpg123
			 emms-player-mpg321
			 emms-player-ogg123
			 emms-player-mplayer))

;;------------------end-----------------------

;;=====================
;;org-mode
;;=====================
(require 'org-install)
(require 'org-publish)
(add-to-list 'auto-mode-alist '("\\.org\\'" . org-mode))
(add-hook 'org-mode-hook 'turn-on-font-lock)


(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ac-sources (quote (ac-source-yasnippet ac-source-abbrev ac-source-words-in-buffer ac-source-files-in-current-dir ac-source-filename)) t)
 '(ansi-color-names-vector ["#242424" "#e5786d" "#95e454" "#cae682" "#8ac6f2" "#333366" "#ccaa8f" "#f6f3e8"])
 '(column-number-mode t)
 '(custom-enabled-themes (quote (light-blue)))
 '(display-time-mode t)
 '(org-agenda-files (quote ("~/org/gtd.org" "~/org/notes.org" "~/org/project.org" "~/org/finished.org")))
 '(org-refile-targets (quote (("gtd.org" :maxlevel . 1) ("someday.org" :level . 2))))
 '(show-paren-mode t)
 '(tool-bar-mode nil)
)

(autoload 'org-mode "org" "Org mode" t)
(autoload 'org-diary "org" "Diary entries from Org mode")
(autoload 'org-agenda "org" "Multi-file agenda from Org mode" t)
(autoload 'org-store-link "org" "Store a link to the current location" t)
(autoload 'orgtbl-mode "org" "Org tables as a minor mode" t)
(autoload 'turn-on-orgtbl "org" "Org tables as a minor mode")

(global-set-key "\C-cl" 'org-store-link)
(global-set-key "\C-cc" 'org-capture)
(global-set-key "\C-ca" 'org-agenda)
(global-set-key "\C-cb" 'org-iswitchb)
(global-set-key "\C-c." 'org-time-stamp)

(global-set-key "\C-cr" 'org-remember)

;;自动换行
;;(setq org-hide-leading-stars t)
(setq org-enable-table-editor 1)
(setq org-log-done t)
(setq org-log-done '(done))
(setq org-agenda-include-diary t)

(add-hook 'org-mode-hook
	  (lambda ()
	    (setq truncate-lines nil)
	    (smiley-buffer (current-buffer))
	    (set-fill-column 70)))

;;capture template
(setq org-directory "~/org/")
(setq org-capture-templates
      '(("t" "Todo" entry (file-headline "~/org/gtd.org" "Tasks")
	 "* TODO" %?\n $i\n %a)
	("j" "Jhsygg" entry (file+datetree "~/org/jhsygg.org")
	 "* %?\nEntered on %U\n %i\n %a")
	("s" "Study" entry (file+datetree "~/org/study.org")
	 "* %?\nEntered on %U\n %i\n %a")
	("h" "Home" entry (file+datetree "~/org/home.org")
	 "* %?\nEntered on %U\n %i\n %a")
	))

(setq org-agenda-exporter-settings
      '((ps-number-of-columns 1)
        (ps-landscape-mode t)
        (htmlize-output-type 'css)))

(setq org-agenda-custom-commands
'(
  ("p" "Project"
   ((tags "PROJECTS")))

  ("h" "Office and Home Lists"
   ((agenda)
    (tags-todo "@Office")
    (tags-todo "@Home")
    (tags-todo "@Why")
    (tags-todo "@Lunchtime")
    (tags-todo "@Computer")
    (tags-todo "@Call")
    ))

  ("d" "Daily Action List"
   (
    (agenda "" ((org-agenda-ndays 1)
        (org-agenda-sorting-strategy
         (quote ((agenda time-up priority-down tag-up) )))
        (org-deadline-warning-days 0)
        ))))))

(setq org-todo-keywords '((sequence "TODO(t!)" "NEXT(n)" "WAITTING(w)" "SOMEDAY(s)" "|" "DONE(d@/!)" "ABORT(a@/!)")))

(org-remember-insinuate)
(setq org-directory "~/org/")
(setq org-remember-templates '(("New" ?n "* %? %t \n %i\n %a" "~/org/inbox.org" )
			       ("Task" ?t "** TODO %?\n %i\n %a" "~/org/task.org" "Tasks")
			       ("Calendar" ?c "** TODO %?\n %i\n %a" "~/org/task.org" "Tasks")
			       ("Idea" ?i "** %?\n %i\n %a" "~/org/task.org" "Ideas")
			       ("Note" ?r "* %?\n %i\n %a" "~/org/note.org" )
			       ("Project" ?p "** %?\n %i\n %a" "~/org/project.org" %g) ))

(setq org-default-notes-file (concat org-directory "/inbox.org"))

(defun gtd ()
    (interactive)
    (find-file "~/org/gtd.org"))
(global-set-key (kbd "C-c g") 'gtd)

(add-hook 'org-agenda-mode-hook 'hl-line-mode)

(setq org-clock-persist 'history)
(org-clock-persistence-insinuate)

(setq org-log-done 'time)
(setq org-log-done 'note)
(setq org-use-fast-tag-selection t)
;;-------------------org-mode end----------------------

(require 'xcscope)

;;====================================
;;半透明窗口设置
;;====================================
(global-set-key [f12] 'loop-alpha);;全局绑定F12键为功能键
(setq alpha-list '((100 100)(85 50)(75 45)(65 35)(55 25)));;当前和非当前窗口时透明度分别为85、50
(defun loop-alpha()
  (interactive)
  (let ((h (car alpha-list)))
    ((lambda (a ab)
       (set-frame-parameter (selected-frame) 'alpha (list a ab))
       (add-to-list 'default-frame-alist (cons 'alpha (list a ab))))
     (car h)(car (cdr h)))
    (setq alpha-list (cdr (append alpha-list (list h))))))

;;=======================================
;;mew 邮件收发设置
;;=======================================
(add-to-list 'load-path "/usr/share/emacs/site-lisp/mew/") 
(autoload 'mew "mew" nil t)
(autoload 'mew-send "mew" nil t)
(if (boundp 'read-mail-command)
    (setq read-mail-command 'mew))
(autoload 'mew-user-agent-compose "mew" nil t)
(if (boundp 'mail-user-agent)
    (setq mail-user-agent 'mew-user-agent))
(if (fboundp 'define-mail-user-agent)
    (define-mail-user-agent
      'mew-user-agent
      'mew-user-agent-compose
      'mew-draft-send-message
      'mew-draft-kill
      'mew-send-hook))

(setq mew-pop-size 0)
(setq mew-smtp-auth-list nil);;("CRAM-MD5" "LOGIN" "PLAIN"))
(setq mew-pop-delete nil)
(setq toolbar-mail-reader 'Mew)
(set-default 'mew-decode-quoted 't)  
(setq mew-prog-pgp "gpg")
(setq mew-name "jhsygg")
(setq mew-user "jhsygg")
(setq mew-smtp-user "jhsygg")
(setq mew-mail-domain "www.126.com")
(setq mew-smtp-auth-list nil)
(setq mew-smtp-server "smtp.126.com")
(setq mew-pop-server "pop.126.com")
(setq mew-pop-user "jhsygg")
(setq mew-pop-auth 'pass) 
(setq mew-use-cached-passwd t)
;;(setq mew-nntp-server "nntp.126.com")
;;(setq mew-icon-directory (expand-file-name "mew/etc" dtsite-dir))
(when (boundp 'utf-translate-cjk)
  (setq utf-translate-cjk t)
  (custom-set-variables
   '(utf-translate-cjk t)))
(if (fboundp 'utf-translate-cjk-mode)
    (utf-translate-cjk-mode 1)) 
(require 'flyspell)
;;----------------mew end---------------------

(put 'upcase-region 'disabled nil)



;;=================matlab set =====================

(add-to-list 'load-path "~/.emacs.d/matlab-emacs/matlab-emacs")
(require 'matlab-load)
(autoload 'matlab-mode "matlab" "Enter MATLAB mode." t)
(setq auto-mode-alist (cons '("\\.m\\'" . matlab-mode) auto-mode-alist))
(autoload 'matlab-shell "matlab" "Interactive MATLAB mode." t)
(setq matlab-verify-on-save-flag nil) ; turn off auto-verify on save
(defun my-matlab-mode-hook ()
  (setq fill-column 76)) ; where auto-fill should wrap
(add-hook 'matlab-mode-hook 'my-matlab-mode-hook)
(defun my-matlab-shell-mode-hook ()
  '())
(add-hook 'matlab-shell-mode-hook 'my-matlab-shell-mode-hook)
(global-font-lock-mode t)
                                        ;(matlab-mode-hilit)
(autoload 'tlc-mode "tlc" "tlc Editing Mode" t)
(add-to-list 'auto-mode-alist '("\\.tlc$" . tlc-mode))
(setq tlc-indent-function t)

(setq tab-width 4 indent-tabs-mode nil)

;;------------------matlab end---------------------

;;==================窗口操作 set=========================

;;关闭当前窗口
(global-set-key (kbd "M-4") 'delete-windows)
;;(global-set-key (kbd "M-4") 'kill-this-buffer)
;;关闭其他窗口，alt+1
(global-set-key (kbd "M-1") 'delete-other-windows)
;;水平分割窗口,alt+2
(global-set-key (kbd "M-2") 'split-window-vertically)
;;垂直分割窗口,alt+3
(global-set-key (kbd "M-3") 'split-window-horizontally)
;;切换到其他窗口
(global-set-key (kbd "M-0") 'other-window)
;;显示缓冲区完整名称
(global-set-key (kbd "M-5") 'display-buffer-name)

;;------------------窗口操作 end-------------------

;;==========键绑定，f1--帮助设置=================

(global-set-key [f1] 'manual-entry)
(global-set-key [C-f1] 'info)

;;==================================
;;将光标改成一个竖线
;;==================================

(require 'cursor-change)
(cursor-change-mode 1)

;;==================================
;;emacs 主题设置
;;==================================


;;============el-get set==================

(add-to-list 'load-path "~/.emacs.d/el-get/el-get")

(unless (require 'el-get nil 'noerror)
(with-current-buffer
      (url-retrieve-synchronously
       "https://raw.github.com/dimitri/el-get/master/el-get-install.el")
    (goto-char (point-max))
    (eval-print-last-sexp)))

(add-to-list 'el-get-recipe-path "~/.emacs.d/el-get-user/recipes")
;;(el-get 'sync)

(add-to-list 'load-path "~/.emacs.d/el-get/org-table-comment")
(require 'org-table-comment)

(add-to-list 'load-path "~/.emacs.d/el-get/php-mode")
(require 'php-mode)

;;===============el-get end====================

;;===============org-mode table 中英文对齐=================

;;英文设置如下：
;;(custom-set-faces
;; '(default ((t (:inherit nil :stipple nil 
;;			 :inverse-video nil :box nil :strike-through nil :verline nil
;;			 :underline nil :slant normal :weight normal :height 120
;;			 :width normal :foundry "unknown" :family "Liberation Mono")))))

;;中文设置如下：
;;(if (and (fboundp 'daemonp)(daemonp))
;;    (add-hook 'after-make-frame-functions
;;	      (lambda (frame)
;;		(with-selected-frame
;;		    (set-fontset-font "fontset-default"
;;				      'chinese-gbk "WenQuanYi Micro Kei Mono 15"))))
;;(set-fontset-font "fontset-default" 'chinese-gbk "WenQuanYi Micro Kei Mono 15"))

;;另外，为了column view能够在daemon模式下正常显示，还需要如下代码：
;;(defun wl-org-column-view-uses-fixed-width-face ()
;; copy from org-faces.el
;;  (when (fboundp 'set-face-attribute)
;; Make sure that a fixed-width face is used when we have a column table.
;;    (set-face-attribute 'org-column nil
;;                        :height (face-attribute 'default :height)
;;                        :family (face-attribute 'default :family))))

;;(when (and (fboundp 'daemonp) (daemonp))
;;  (add-hook 'org-mode-hook 'wl-org-column-view-uses-fixed-width-face))
;;====================table end====================
;;(custom-set-faces
;; custom-set-faces was added by Custom.
;; If you edit it by hand, you could mess it up, so be careful.
;; Your init file should contain only one such instance.
;; If there is more than one, they won't work right.
;;)

;;(add-to-list 'load-path "~/.emacs.d/site-lisp/")
;;(require 'eide)
;;(eide-start)
;;(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 ;;)
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

Entered on [2013-06-06 四 01:41]
 
 [[file:~/org/gtd.org::*emacs][emacs]]
**** matlab 在数学建模中的应用
1、控制可达到你想象不到的精度。
2、在实际运用中，需要在精度与成本上作出确认。并得出现阶段最优解，同时为下一轮的精度与成本变化有所准备。
3、许多事物对于我来说都是无知的，哪怕是自己认为最为熟悉的领域。
4、控制数据的输入来源于过去，现在运算，控制将来（输出）。
Entered on [2013-06-06 四 19:12]
 
 [[file:~/org/gtd.org::*matlab][matlab]]
*** 2013-06-07 星期五
*** 2013-06-09 星期日
**** Lisp 
C-x C-e eval-last-sexq sexq--symbol expression(符号表达式)  eval--evaluation(求值)；对最近一个符号表达式求值。

(+ 2 2)C-x C-e

(concat "abc" "d123")
:abcd123

*substring*

(substring "The quick brown fox jumped." 16 19)
:fox

(+ 2 fill-column)
:72

*message*

(message "This message appears in the echo area")
:"This message appears in the echo area"

(message "The name of this buffer is: %s" (buffer-name))

*set*
(set 'flowers '(rose violet daisy buttercuo))

*setq*
(setq flowers '(rose violet daisy buttercuo))

*buffer*
(point)

*defun*
define function

Entered on [2013-06-09 日 09:23]
 
 [[file:~/org/gtd.org::*GNU%20Emacs%20Lisp][GNU Emacs Lisp]]
*** 2013-06-11 星期二
**** mysql 基本命令
1、show database;
2、create database mysqldata;
3、use mysqldata;
4、show tables;
5、create table mytable (name varchar(20),sex char(1));
6、describe mytable;
7、insert into mytable values ("hyp","M");
8、load data local infile "~/mysql/mydate.txt" into table mytable;
9、use database;
   source "~/mysql/mydate";
10、drop table mytable;
11、delete form mytable;
12、update mytable set sex="f" whrer name='hyq';

Entered on [2013-06-11 二 20:22]
 
 [[file:~/org/gtd.org::*mysql][mysql]]
*** 2013-06-12 星期三
**** php mysql
<?php
//phpinfo();
echo "这是第一个用emacs 编辑php的实例！操作mysql中workdata数据库".'<br>';
echo "建立与mysql的连接".'<br>';
$cont=mysql_connect("localhost","root","jh6246");
if (!$cont)
  {
    die('不能连接，请检查连接设置！' . mysql_error());
  }
mysql_query('SET NAMES UTF8');  
mysql_select_db("workdata");
$sql="select trouble.tro_id,organise.org_name,device.dev_name,trouble.tro_time,trouble.subject,trouble.i_time from (trouble left join organise on trouble.org_id = organise.org_id) left join device on trouble.dev_id = device.dev_id where trouble.org_id=2";
$result=mysql_query($sql);
$tro_list=array();
while($row=mysql_fetch_row($result)){
  echo($row[0]);
  echo($row[1]);
  echo($row[2]);
  echo($row[3]);
  echo($row[4]);
  echo($row[5]).'<br>';
}

mysql_close($cont);
?>



Entered on [2013-06-12 三 15:39]
 
 [[file:~/org/gtd.org::*php][php]]
*** 2013-06-14 星期五
**** emacs games
tetris    俄罗斯方块
gomoku    五子棋
mpuz      填数字
snake     贪吃蛇
zone      屏保
dennet    Mud
Entered on [2013-06-14 五 14:49]
 
 [[file:~/org/gtd.org::*emacs][emacs]]
*** 2013-06-16 星期日
**** 什么是ajax
Asynchronous
JavaScript
And
Xml

一、使用xhtml标准
1、全小写；
2、标签封闭；
3、属性必须完整定义；
4、属性必须要双引号封闭。
5、标签要物尽其用。页面与控制的分离。
DOM+CSS
二、使用DOM进行动态显示和交互
三、使用xml和xslt进行数据交换和处理。用Json来处理。
四、使用XMLHttpRequest对象对行异步数据检索。
五、使用JavaScript将以上技术融合在一起。

Entered on [2013-06-16 日 07:31]
 
 [[file:~/org/gtd.org::*AJAX][AJAX]]
** 2013-07 七月
*** 2013-07-15 星期一
**** MBA课程
第一集
兔子在山洞前写文章。狼走了过来问：“你在写什么内容啊？”兔子回答：“《浅谈兔子是怎样吃掉狼的？》。”狼不信，于是兔子把狼领进山洞。过了一会，兔子独自走出山洞，继续写文章。

野猪走了过来问：“你在写什么？”兔子答：“《浅谈兔子是如何吃掉野猪的》。”野猪不信，于是兔子又把野猪领进山洞。

最后，在山洞里，一只狮子在一堆狼骨头和野猪骨头之间，满意地剔着牙，读着兔子交给它的文章---《员工能力的大小，关键看你跟谁干》

总结：一个人不在于你干什么，在于你跟谁干；不在于你付出多少努力，在于你所处的平台有多大。人生最重要的是选择。选择错误，再多的努力也是白费。要想选择正确就得知道你要的平台和老板的背景。

第二集

兔子不小心把这件事告诉了他的朋友，消息逐渐在森林中传开。狮子非常生气：“如果这个星期没有食物进洞，我就吃你。”

兔子于是继续在洞口写文章，小鹿走过来：“你在写什么？”兔子答：“《浅谈兔子是怎样吃掉狼的》。”小鹿说：“这个事情全森林都知道啊，你还玩这一套？。”兔子说：“就是因为全森林都知道了，我只能退休了，狮子说要找个人顶替我，难道你不想接替这个岗位吗？”小鹿终于忍不住诱惑，跟随兔子走进洞里。

过了一会，兔子独自走出山洞，继续写文章。小马走过来，同样的事情发生了。在山洞里，狮子满意地剔着牙，读着兔子交给它的文章---《销售人员如何发展下线为老板创造效益》。

总结：自己的秘密不要随便泄露，一旦泄露了，必须要相应的有效补救措施，员工必须不断为老板创造价值，当你给老板所贡献的价值小于你享受的价值时，也就是你该走人的时候。

第三集

狮子越长越大，兔子的食物已远远不能填饱肚子。他告诉兔子：“我的食物量要加倍，原来4天一只小鹿，现在要2天一只，如果一周之内改变不了局面我就吃你。”

于是，兔子离开洞口，跑进森林深处，他见到一只山羊；“你相信兔子能轻松吃掉狼吗？”山羊不信，于是兔子把山羊领进山洞。

过了一会，兔子独自走出山洞，继续进入森林深处。这回他碰到一只野猪，同样的事情发生了。原来森林深处的动物并不知道兔子和狮子的故事。最后，在山洞里，狮子满意剔着牙，读着兔子给它的文章---《如何实现由坐商到行商的转型》。

总结：不断开拓新市场，不断挖掘新的商业模式是打开僵局的好办法。当你实在想不出解决问题的方法是时，走出去吧！

第四集

随着时间推移，狮子由于长期吃了就睡，长得很胖。一日，狮子决定出去散散心，突然发现洞口太小了，它的身体根本无法出去。

兔子站在洞口，得意地说：“今后，你得什么都听我的，否则别想让我给你弄吃的。”狮子无奈地说：“好吧！只要给我吃的，什么都可以。”这时，狮子发现兔子的新论文---《战略决定高度---论兔子是如何借力狮子的》。

总结：为狮子设计一个衣食无忧的场所，借助狮子威名提高自己在森林里的影响力，忍辱负重，最终把控制权掌握在手里，所有付出都是值得的。

第五集

兔子在森林里的名气越来越大，大家都知道它的老板很厉害，而且那么厉害的老板还得什么都听它的。

于是，兔子开始横行霸道，欺上欺下，终于有一天，猎人来了，活捉了兔子，并在洞口贴了张纸条：“强中还有强中手。”

总结：得意不可忘形。

第六集

森林里恢复了往日的宁静，兔子吃狼的故事似乎快要被大家忘记了。

又过了很久，一只年轻的老虎听说了这个故事，激发了灵感。于是抓住一只羚羊，说：“如果你可以象以前的兔子那样为我带来食物那我就不吃你。”

羚羊答应了，老虎悠然自得的进了山洞。可是三天过去了，也没有见羚羊领一只动物进洞。它实在憋不住了，出来一看，羚羊早就跑了，只留下一篇文章在地上---《想要做好老板，先要懂得怎样留住员工》。

总结：同样的商业模式并不适应所有的人。时间的推移，机会成本也在增加，盲目把旧的经验移植到今天的环境中，失败是难免的。



Entered on [2013-07-15 一 09:19]
 
 [[file:~/org/gtd.org::*%E7%AE%A1%E7%90%86%E5%BF%83%E7%90%86%E5%AD%A6][管理心理学]]
*** 2013-07-16 星期二
**** 关于“做正确的事”和“正确的去做事”

Entered on [2013-07-16 二 08:33]
 
 [[file:~/org/gtd.org::*GTD%20%E7%AE%A1%E7%90%86%E6%96%B9%E6%B3%95][GTD 管理方法]]
** 2013-08 八月
*** 2013-08-22 星期四
**** graphviz-dot-mode的学习笔记
digraph G {
	PY->ZO->Zope2->CMF->Plone;
	ZO->Zope3;
	ZO->Zs;
	Zs[label="ZODB,ZPT\n...."];
	PY->XML;
	PY->"4Suite"->XML;
	PY->Elements->XML;
	PY[label="大脑使用说明书",shape=box];
	ZO[label="Zope",shape=egg];
}
命令行，执行以下命令：生成simp1.png
>dot -Tpng simp1.dot -o simp1.png

其中：
digraph G {} 是脚本声明
/*....*/ 为注释形式
a->b 关系指向  使用a--b 连接图元
foo[label=...]是属性定义语法，可以在末尾集中声明，也可以随时在关系说明中定义
    label 标签属性中可以使用标准的转义符来换行等等
    shape 图元形状属性，可以指外框形式；
    Node Shapes
    box,polygon,ellipse,circle,point,egg,triangle,plaintext,diamond,trapezium,parallelogram,house,hexagon,octagon,doublecircle,doubleoctagon,tripleoctagon,invtriangle,invtrapezium,invhouse,Mdiamond,Msquare,Mcircle,none,record,Mrecord
    Arrowhead Types
    normal,dot,odot,inv,invdot,invodot,crow,tee,vee,diamond,none

    Color Names
Whites Reds Yellows turquoise[1-4]
antiquewhite[1-4] coral[1-4] darkgoldenrod[1-4]
azure[1-4] crimson gold[1-4]
Blues
bisque[1-4] darksalmon goldenrod[1-4] aliceblue
blanchedalmond deeppink[1-4] greenyellow blue[1-4]
cornsilk[1-4] firebrick[1-4] lightgoldenrod[1-4] blueviolet
floralwhite hotpink[1-4] lightgoldenrodyellow cadetblue[1-4]
gainsboro indianred[1-4] lightyellow[1-4] cornflowerblue
ghostwhite lightpink[1-4] palegoldenrod darkslateblue
honeydew[1-4] lightsalmon[1-4] yellow[1-4] deepskyblue[1-4]
ivory[1-4] maroon[1-4] yellowgreen dodgerblue[1-4]
lavender mediumvioletred indigo
lavenderblush[1-4] orangered[1-4]
Greens
lightblue[1-4]
lemonchiffon[1-4] palevioletred[1-4] chartreuse[1-4] lightskyblue[1-4]
linen pink[1-4] darkgreen lightslateblue[1-4]
mintcream red[1-4] darkolivegreen[1-4] mediumblue
mistyrose[1-4] salmon[1-4] darkseagreen[1-4] mediumslateblue
moccasin tomato[1-4] forestgreen midnightblue
navajowhite[1-4] violetred[1-4] green[1-4] navy
oldlace greenyellow navyblue
papayawhip
Browns
lawngreen powderblue
peachpuff[1-4] beige lightseagreen royalblue[1-4]
seashell[1-4] brown[1-4] limegreen skyblue[1-4]
snow[1-4] burlywood[1-4] mediumseagreen slateblue[1-4]
thistle[1-4] chocolate[1-4] mediumspringgreen steelblue[1-4]
wheat[1-4] darkkhaki mintcream
white khaki[1-4] olivedrab[1-4]
Magentas
whitesmoke peru palegreen[1-4] blueviolet
rosybrown[1-4] seagreen[1-4] darkorchid[1-4]
Greys
saddlebrown springgreen[1-4] darkviolet
darkslategray[1-4] sandybrown yellowgreen magenta[1-4]
dimgray sienna[1-4] mediumorchid[1-4]
gray tan[1-4]
Cyans
mediumpurple[1-4]
gray[0-100] aquamarine[1-4] mediumvioletred
lightgray
Oranges
cyan[1-4] orchid[1-4]
lightslategray darkorange[1-4] darkturquoise palevioletred[1-4]
slategray[1-4] orange[1-4] lightcyan[1-4] plum[1-4]
orangered[1-4] mediumaquamarine purple[1-4]
Blacks
mediumturquoise violet
black paleturquoise[1-4] violetred[1-4]

Entered on [2013-08-22 四 10:27]
 
 [[file:~/org/gtd.org::*emacs][emacs]]
** 2013-09 九月
*** 2013-09-18 星期三
**** emacs org
Entered on [2013-09-18 三 06:17]
 
 [[file:~/org/gtd.org.gpg::*emacs][emacs]]
**** matlab fopen
pi 
inf
eps

| bar   | 条形图         |
| hist  | 直方图         |
| plot  | 简单的线性图形 |
| polar | 极坐标图形     |

| y | 黄色 | .  | 点    |
| m | 紫色 | o  | 圆圈  |
| c | 青色 | x  | x标记 |
| r | 红色 | +  | 加号  |
| g | 绿色 | *  | 星号  |
| b | 蓝色 | -  | 实线  |
| w | 白色 | ： | 点线  |
| k | 黑色 | —. | 点划线 |
|   |      | -- | 虚线   |

| grid  |   | gtext  |   |
| hold  |   | text   |   |
| title |   | xlabel |   |
| zoom  |   | ylabel |   |

| axis |        |
|      | square |
|      | equal  |
|      | normal |
|      | of     |
|      | on     |


Entered on [2013-09-18 三 06:17]
 
 [[file:~/org/gtd.org.gpg::*matlab][matlab]]
** 2013-11 十一月
*** 2013-11-19 星期二
**** emacs .emacs
(setq plugins (expand-file-name "~/.emacs.d/plugins/"))
(add-to-list 'load-path plugins)
(setq default-directory "~/org/")

(require 'cedet)
(global-ede-mode t)
(require 'semantic)
(require 'css-mode)
;;(require 'latex-frame-mode)

(require 'chinese-calendar)
(require 'appt)

(require 'sql)
(require 'mysql)

;;(require 'session)
;;(add-hook 'after-init-hook 'session-initalize)

;;==================================
;;chinese font set
;;==================================
;;font 13
(set-default-font "13")

;;全局配置，避免多语言混乱
(set-language-environment 'UTF-8)
;;(set-language-environment 'Chinese-GB)
(set-locale-environment "UTF-8")

(set-keyboard-coding-system 'utf-8)
(set-clipboard-coding-system 'utf-8)
(set-terminal-coding-system 'utf-8)
(set-buffer-file-coding-system 'utf-8)
(set-default-coding-systems 'utf-8)
(set-selection-coding-system 'utf-8)
(modify-coding-system-alist 'process "*" 'utf-8)
(setq default-process-coding-system '(utf-8,utf-8))
(setq-default pathname-coding-system 'utf-8)
;;(set-file-coding-system 'utf-8)
(setq ansi-color-for-comint-mode t)

(prefer-coding-system 'utf-8)
(setq coding-system-for-read 'utf-8)
(setq coding-system-for-write 'utf-8)

;;不生成临时文件
(setq make-backup-files nil)


(setq default-process-coding-system 
      '(utf-8 . utf-8))
(setq-default pathname-coding-system 'utf-8)

;; Setting English Font
;;(set-face-attribute
;;  'default nil :font "Consolas 12")

;; Chinese Font
(if (and (fboundp 'daemonp) (daemonp))
    (add-hook 'after-make-frame-functions
              (lambda (frame)
                (with-selected-frame frame
                  (set-fontset-font "fontset-default"
                                    'chinese-gbk "WenQuanYi Micro Hei Mono 13"))))
  (set-fontset-font "fontset-default" 'chinese-gbk "WenQuanYi Micro Hei Mono 13"))

;;==========================================
;;外观设置
;;==========================================

;;禁用启动画面
(setq inhibit-startup-message t)

;;禁用工具栏
(tool-bar-mode -1)

;;禁用滚动栏
(scroll-bar-mode -1)

;;光标靠近鼠标的时候，让鼠标自动让开
(mouse-avoidance-mode 'animate)

;;禁用菜单栏，F10开启关门菜单
(menu-bar-mode nil)

;;========================================
;;键绑定
;;========================================

;;C-z 设置标记,M-x iconify-or-deiconify-frame:C-z,C-x C-z
(global-set-key (kbd "C-z") 'set-mark-command)

;;F10显示/隐藏菜单栏;;M-x menu-bar-open
(global-set-key [(f10)] 'menu-bar-mode)

;;WIN+s进入shell;; M-x shell
(global-set-key (kbd "s-s") 'shell)

;;WIN+space 设置标记
(global-set-key (kbd "s-SPC") 'set-mark-command)

;;=======================================
;;设置缓冲区
;;=======================================

;;设定行距
(setq default-line-spacing 4)

;;页宽
(setq default-fill-column 60)

;;缺省模式 text-mode
(setq default-major-mode 'text-mode)

;;页面平滑滚动，scroll-margin 3 靠近屏幕边沿3行时开始滚动，可以很好地看到上下文
(setq scroll-margin 3
      scroll-conservatively 10000)

;;高亮显示成对括号，但不来回弹跳
(show-paren-mode t)
(setq show-paren-style 'parentheses)

;;粘贴于光标处，而不是鼠标处
(setq mouse-yank-at-point t)

;;======================================
;;回显区
;;======================================

;;闪屏报警
(setq visible-bell t)

;;使用y or n 提问
(fset 'yes-or-no-p 'y-or-n-p)

;;锁定行高
(setq resize-mini-windows nil)

;;递归minibuffer
(setq enable-recursive-minibuffers t)

;;===================================
;;状态栏
;;===================================

;;显示时间
(display-time)
;;时间格式
(setq display-time-24hr-format t)
(setq display-time-day-and-date t)
(setq display-time-interval 10)

;;显示列号
(setq column-number-mode t)

;;标题栏显示 %f 缓冲区完整路径 %p 页面百分数 %l 行号
(setq frame-title-format "%f")

;;==================================
;;编辑设定
;;==================================

;;不生成临时文件
(setq-default mark-backup-files nil)

;;只渲染当前屏幕语法高亮，加快显示速度
;;(setq lazy-lock-mode t)
;;(setq font-lock-support-mode 'lazy-lock-mode)
;;(setq font-lock-maximum-decoration t)

;;将错误信息显示在回显区
(condition-case err
    (progn
      (require 'xxx))
  (error
   (message "Can't load xxx-mode %s" (cdr err))))

;;使用x剪切板
(setq x-select-enable-clipboard t)
;;设定剪贴板内容形式 适应firefox
(set-clipboard-coding-system 'ctext)


;;在标题栏显示buffer的名字，而不是默认的没用的显示
(setq frame-title-format "emacs@%b")
;;括号匹配时显示另外一边的括号，不跳光标
(setq show-paren-style 'parentheses)

;;==================配色方案设置=====================

(add-to-list 'load-path "/usr/share/emacs/site-lisp")

(require  'color-theme)
(color-theme-initialize)
(color-theme-dark-blue2)

;;---------------color setup------------------------

;;==================全屏设置=======================

(defun toggle-fullscreen (&optional f)
  (interactive)
  (let ((current-value (frame-parameter nil 'fullscreen)))
    (set-frame-parameter nil 'fullscreen
			 (if (equal 'fullboth current-value)
			     (if (boundp 'old-fullscreen) old-fullscreen nil)
			   (progn (setq old-fullscreen current-value)
				  'fullboth)))))
(global-set-key [f11] 'toggle-fullscreen)

(add-hook 'after-make-frame-functions 'toggle-fullscreen)
;;-------------------end-------------------------

;;=================设置个人信息====================

(setq user-full-name "jhsygg")
(setq user-mail-address "jhsygg@126.com")

;;-------------------end-------------------------

;;===============load 配置文件=====================

(load "jdp-latex")
(load "jdp-w3m")
;;(load "jdp-erc")

(add-to-list 'load-path "~/.emacs.d/matlab-emacs")

(autoload 'matlab-mode "matlab" "Matlab Editing Mode" t)
(add-to-list
 'auto-mode-alist
 '("\\.m$" . matlab-mode))
(setq matlab-indent-function t)
(setq matlab-shell-command "matlab")

;;(load "jdp-weather")
(require 'cn-weather)
(load "jdp-yasnippet")

;;(load "jdp-ac")
;;(load "jdp-php")
;;(load "jdp-org")
;;(load "emacs-emms")
(load "jdp-c")
(load "jdp-mysql")
(require 'reftex)

;;----------------end----------------------------

;;c/c++环境配置
;;================================================
;;如何让emacs启动后就最大化？
(setq default-frame-alist
      '(
	(top . 30)
	(life . 30)
	(width . 130)
	(hight . 70)
	)
      )

;;显示列号
(setq column-number-mode t)
(setq line-number-mode t)
;;LaTeX 模式下，不打开自动折行
;;(turn-off-auto-fill)

;;显示行数
(global-linum-mode t)

;;打开自动补全
(add-to-list 'load-path "~/.emacs.d/elpa/")
(require 'auto-complete)
(global-auto-complete-mode t)
(define-key ac-complete-mode-map "\C-n" 'ac-next)
(define-key ac-complete-mode-map "\C-p" 'ac-previous)
(setq ac-auto-start 1)
(global-set-key "\M-/" 'ac-start)
(define-key ac-complete-mode-map "\M-/" 'ac-stop)
(define-key ac-complete-mode-map "\t" 'ac-complete)
(define-key ac-complete-mode-map "\r" nil)
(require 'auto-complete-config)
(add-to-list 'ac-dictionary-directories "~/.emacs.d/elpa//ac-dict")
(ac-config-default)

;;=================多媒体emms=================
(setq emms-player-list '(emms-player-mpg123
			 emms-player-mpg321
			 emms-player-ogg123
			 emms-player-mplayer))

;;------------------end-----------------------

;;=====================
;;org-mode
;;=====================
(require 'org-install)
(require 'org-publish)
(add-to-list 'auto-mode-alist '("\\.org\\'" . org-mode))
(add-hook 'org-mode-hook 'turn-on-font-lock)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ac-sources (quote (ac-source-yasnippet ac-source-abbrev ac-source-words-in-buffer ac-source-files-in-current-dir ac-source-filename)) t)
 '(ansi-color-names-vector ["#242424" "#e5786d" "#95e454" "#cae682" "#8ac6f2" "#333366" "#ccaa8f" "#f6f3e8"])
 '(column-number-mode t)
 '(custom-enabled-themes (quote (light-blue)))
 '(display-time-mode t)
 '(matlab-mode-install-path /opt/bin/matlab)
 '(matlab-shell-command "/opt/bin/matlab")
 '(org-agenda-files (quote ("~/org/gtd.org.gpg" "~/org/journal.org.gpg" "~/org/notes.org" "~/org/study.org" "~/org/finished.org")))
 '(org-refile-targets (quote (("gtd.org.gpg" :maxlevel . 1) ("finished.org" :level . 1))))
 '(show-paren-mode t)
 '(tool-bar-mode nil))

(autoload 'org-mode "org" "Org mode" t)
(autoload 'org-diary "org" "Diary entries from Org mode")
(autoload 'org-agenda "org" "Multi-file agenda from Org mode" t)
(autoload 'org-store-link "org" "Store a link to the current location" t)
(autoload 'orgtbl-mode "org" "Org tables as a minor mode" t)
(autoload 'turn-on-orgtbl "org" "Org tables as a minor mode")

(global-set-key "\C-cl" 'org-store-link)
(global-set-key "\C-cc" 'org-capture)
(global-set-key "\C-ca" 'org-agenda)
(global-set-key "\C-cb" 'org-iswitchb)
(global-set-key "\C-c." 'org-time-stamp)

(global-set-key "\C-cr" 'org-remember)

;;自动换行
;;(setq org-hide-leading-stars t)
(setq org-enable-table-editor 1)
(setq org-log-done t)
(setq org-log-done '(done))
(setq org-agenda-include-diary t)

(add-hook 'org-mode-hook
	  (lambda ()
	    (setq truncate-lines nil)
	    (smiley-buffer (current-buffer))
	    (set-fill-column 70)))

;;capture template
(setq org-directory "~/org/")
(setq org-capture-templates
      '(("t" "Todo" entry (file-headline "~/org/gtd.org.gpg" "Tasks")
	 "* TODO" %?\n $i\n %a)
	("j" "Journal" entry (file+datetree "~/org/journal.org.gpg")
	 "* %?\nEntered on %U\n %i\n %a")
	("s" "Study" entry (file+datetree "~/org/study.org")
	 "* %?\nEntered on %U\n %i\n %a")
	("h" "Home" entry (file+datetree "~/org/home.org")
	 "* %?\nEntered on %U\n %i\n %a")
	))

(setq org-agenda-exporter-settings
      '((ps-number-of-columns 1)
        (ps-landscape-mode t)
        (htmlize-output-type 'css)))

(setq org-agenda-custom-commands
      '(
	("p" "Project"
	 ((tags "PROJECTS")))

	("h" "Office and Home Lists"
	 ((agenda)
	  (tags-todo "@Office")
	  (tags-todo "@Home")
	  (tags-todo "@Why")
	  (tags-todo "@Lunchtime")
	  (tags-todo "@Computer")
	  (tags-todo "@Call")
	  ))

	("d" "Daily Action List"
	 (
	  (agenda "" ((org-agenda-ndays 1)
		      (org-agenda-sorting-strategy
		       (quote ((agenda time-up priority-down tag-up) )))
		      (org-deadline-warning-days 0)
		      ))))))


;;(setq org-agenda-files (list "~/org/gtd.org.gpg"
;; 			     "~/org/journal.org.gpg"
;; 			     "~/org/notes.org"
;; 			     "~/org/study.org"
;; 			     "~/org/tasks.org"
;; 			     "~/org/home.org"))

;;Emacs TODO 模式的相关文件
;;========================
;;(setq todo-file-do "~/.emacs.d/todo-do")
;;(setq todo-file-done "~/.emacs.d/todo-done")
;;(setq todo-file-top "~/.emacs.d/todo-top")

(setq org-todo-keywords '((sequence "TODO(t!)" "NEXT(n)" "WAITTING(w)" "SOMEDAY(s)" "|" "DONE(d@/!)" "ABORT(a@/!)")))
;;(setq org-todo-keywords '((sequence "TODO(t!)" "APPT" "STARTED" "DONE(d@/!)")))

(org-remember-insinuate)
(setq org-remember-templates '(("New" ?n "* %? %t \n %i\n %a" "~/org/inbox.org" )
			       ("Task" ?t "** TODO %?\n %i\n %a" "~/org/task.org" "Tasks")
			       ("Calendar" ?c "** TODO %?\n %i\n %a" "~/org/task.org" "Tasks")
			       ("Idea" ?i "** %?\n %i\n %a" "~/org/task.org" "Ideas")
			       ("Note" ?r "* %?\n %i\n %a" "~/org/note.org" )
			       ("Project" ?p "** %?\n %i\n %a" "~/org/project.org" %g) ))

(setq org-default-notes-file (concat org-directory "/inbox.org"))


(defun gtd ()
  (interactive)
  (find-file "~/org/gtd.org.gpg"))

(global-set-key (kbd "C-c g") 'gtd)

(add-hook 'org-agenda-mode-hook 'hl-line-mode)

(setq org-clock-persist 'history)
(org-clock-persistence-insinuate)

(setq org-log-done 'time)
(setq org-log-done 'note)
(setq org-use-fast-tag-selection t)

;;-------------------org-mode end----------------------

;;(require 'xcscope)

;;====================================
;;半透明窗口设置
;;====================================
(global-set-key [f12] 'loop-alpha);;全局绑定F12键为功能键
(setq alpha-list '((100 100)(85 50)(75 45)(65 35)(55 25)));;当前和非当前窗口时透明度分别为85、50
(defun loop-alpha()
  (interactive)
  (let ((h (car alpha-list)))
    ((lambda (a ab)
       (set-frame-parameter (selected-frame) 'alpha (list a ab))
       (add-to-list 'default-frame-alist (cons 'alpha (list a ab))))
     (car h)(car (cdr h)))
    (setq alpha-list (cdr (append alpha-list (list h))))))

;;=======================================
;;mew 邮件收发设置
;;=======================================
(add-to-list 'load-path "/usr/share/emacs/site-lisp/mew/") 
(autoload 'mew "mew" nil t)
(autoload 'mew-send "mew" nil t)
(if (boundp 'read-mail-command)
    (setq read-mail-command 'mew))
(autoload 'mew-user-agent-compose "mew" nil t)
(if (boundp 'mail-user-agent)
    (setq mail-user-agent 'mew-user-agent))
(if (fboundp 'define-mail-user-agent)
    (define-mail-user-agent
      'mew-user-agent
      'mew-user-agent-compose
      'mew-draft-send-message
      'mew-draft-kill
      'mew-send-hook))

(setq mew-pop-size 0)
;;(setq mew-use-smtp-auth nil)
(setq mew-pop-delete nil)
(setq toolbar-mail-reader 'Mew)
(set-default 'mew-decode-quoted 't)  
(setq mew-prog-pgp "gpg")
(setq mew-name "jhsygg")
(setq mew-user "jhsygg")
(setq mew-smtp-user "jhsygg")
(setq mew-mail-domain "126.com")
;;(setq mew-smtp-auth-list nil)
(setq mew-smtp-auth-list '("PLAIN"  "LOGIN"  "CRAM-MD5"))
(setq mew-smtp-server "smtp.126.com")
(setq mew-pop-server "pop.126.com")
(setq mew-pop-user "jhsygg")
(setq mew-pop-auth 'pass) 
(setq mew-use-cached-passwd t)
;;(setq mew-nntp-server "nntp.126.com")
;;(setq mew-icon-directory (expand-file-name "mew/etc" dtsite-dir))
(when (boundp 'utf-translate-cjk)
  (setq utf-translate-cjk t)
  (custom-set-variables
   '(utf-translate-cjk t)))
(if (fboundp 'utf-translate-cjk-mode)
    (utf-translate-cjk-mode 1)) 
(require 'flyspell)
;;----------------mew end---------------------

(put 'upcase-region 'disabled nil)

;;=================matlab set =====================

;;(add-to-list 'load-path "~/.emacs.d/matlab-emacs/matlab-emacs")
(require 'matlab-load)
(autoload 'matlab-mode "matlab" "Enter MATLAB mode." t)
(setq auto-mode-alist (cons '("\\.m\\'" . matlab-mode) auto-mode-alist))
(autoload 'matlab-shell "matlab" "Interactive MATLAB mode." t)
(setq matlab-verify-on-save-flag nil) ; turn off auto-verify on save
(defun my-matlab-mode-hook ()
  (setq fill-column 76)) ; where auto-fill should wrap
(add-hook 'matlab-mode-hook 'my-matlab-mode-hook)
(defun my-matlab-shell-mode-hook ()
  '())
(add-hook 'matlab-shell-mode-hook 'my-matlab-shell-mode-hook)
(global-font-lock-mode t)

;;(matlab-mode-hilit)
(autoload 'tlc-mode "tlc" "tlc Editing Mode" t)
(add-to-list 'auto-mode-alist '("\\.tlc$" . tlc-mode))
(setq tlc-indent-function t)

(setq tab-width 4 indent-tabs-mode nil)

;;------------------matlab end---------------------

;;==================窗口操作 set=========================

;;关闭当前窗口
(global-set-key (kbd "M-4") 'delete-windows)
;;(global-set-key (kbd "M-4") 'kill-this-buffer)
;;关闭其他窗口，alt+1
(global-set-key (kbd "M-1") 'delete-other-windows)
;;水平分割窗口,alt+2
(global-set-key (kbd "M-2") 'split-window-vertically)
;;垂直分割窗口,alt+3
(global-set-key (kbd "M-3") 'split-window-horizontally)
;;切换到其他窗口
(global-set-key (kbd "M-0") 'other-window)
;;显示缓冲区完整名称
(global-set-key (kbd "M-5") 'display-buffer-name)

;;------------------窗口操作 end-------------------

;;==========键绑定，f1--帮助设置=================

(global-set-key [f1] 'manual-entry)
(global-set-key [C-f1] 'info)

;;==================================
;;将光标改成一个竖线
;;==================================

(require 'cursor-change)
(cursor-change-mode 1)

(require 'php-mode)

(require 'stardict)
(global-set-key (kbd "C-c d") 'kid-star-dict)
(defun kid-star-dict ()
  (interactive)
  (let ((begin (point-min))
        (end (point-max)))
    (if mark-active
        (setq begin (region-beginning)
              end (region-end))
      (save-excursion
        (backward-word)
        (mark-word)
        (setq begin (region-beginning)
              end (region-end))))
    (message "searching for %s ..." (buffer-substring begin end))
    (tooltip-show
     (shell-command-to-string
      (concat "sdcv -n "
              (buffer-substring begin end))))))

(setq diary-file "~/diary")
(setq diary-mail-addr "jhsygg@126.com")
(add-hook 'diary-hook 'appt-make-list)

(require 'wcy-swbuff)
(global-set-key (kbd "<C-tab>") 'wcy-switch-buffer-forward)
(global-set-key (kbd "<C-S-kp-tab>") 'wcy-switch-buffer-backward)

(require 'epa-file)
(epa-file-enable)
(setq epa-file-encrypt-to nil)
(setenv "GPG_AGENT_INFO" nil)
(setq epa-file-cache-passphrase-for-symmetric-encryption t)
(setq epa-file-inhibit-auto-save nil)
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

;;自动补全括号
(defun my-c-mode-auto-pair ()
  (interactive)
  (make-local-variable 'skeleton-pair-alist)
  (setq skeleton-pair-alist '(
			      (?` ?` _ "''")
			      (?\( ? _ " )")
			      (?\[ ? _ " ]")
			      (?{ \n > _ \n ?} >)))
  (setq skeleton-pair t)
  (local-set-key (kbd "(") 'skeleton-pair-insert-maybe)
  (local-set-key (kbd "{") 'skeleton-pair-insert-maybe)
  (local-set-key (kbd "`") 'skeleton-pair-insert-maybe)
  (local-set-key (kbd "[") 'skeleton-pair-insert-maybe))
(add-hook 'c-mode-hook 'my-c-mode-auto-pair)
(add-hook 'c++-mode-hook 'my-c-mode-auto-pair)

(autoload 'css-mode "css-mode" "CSS editing mode" t)
;;(autoload 'htmlize-buffer "htmlize" "HTMLize mode" t)

(autoload 'folding-mode "folding" "Folding mode" t)
(autoload 'turn-off-folding-mode "folding" "Folding mode" t)
(autoload 'turn-on-folding-mode "folding" "Folding mode" t)

(setq auto-mode-alist
      ;;将文件模式和文件后缀关联起来 
      (append '(("\\.py\\'" . python-mode)
                ("\\.s?html?\\'" . html-helper-mode)
                ("\\.asp\\'" . html-helper-mode)
                ("\\.phtml\\'" . html-helper-mode)
                ("\\.css\\'" . css-mode))
              auto-mode-alist))

;; folding for sgml-mode
(add-hook 'sgml-mode-hook
          '(lambda()
             (hs-minor-mode 1)))
(add-to-list 'hs-special-modes-alist
             '(sgml-mode
               "<!--\\|<[^/>]>\\|<[^/][^>]*[^/]>"
               ""
               "<!--"
               sgml-skip-tag-forward
               nil))

(load "graphviz-dot-mode.el" nil t t)

(global-set-key [(meta ?/)] 'hippie-expand)

(setq hippie-expand-try-functions-list
      '(try-expand-dabbrev
	try-expand-dabbrev-visible
	try-expand-dabbrev-all-buffers
	try-expand-dabbrev-from-kill
	try-complete-file-name-partially
	try-complete-file-name
	try-expand-all-abbrevs
	try-expand-list
	try-expand-line
	try-complete-lisp-symbol-partially
	try-complete-lisp-symbol))

(add-to-list 'load-path "~/.emacs-lisp")
(require 'php-mode)
(add-hook 'php-mode-user-hook 'turn-on-font-lock)

(add-to-list 'load-path "~/.emacs.d/el-get/el-get")
(require 'el-get)

(add-to-list 'load-path "~/.emacs.d/el-get/auto-complete+")
(require 'auto-complete+)

(add-to-list 'load-path "~/.emacs.d/el-get/wcy-desktop")
(require 'wcy-desktop) 

(add-to-list 'load-path "~/.emacs.d/el-get/org-blog")
(require 'org-blog) 

(dolist (command '(yank yank-pop))
  (eval
   `(defadvice ,command (after indent-region activate)
      (and (not current-prefix-arg)
           (member major-mode
                   '(emacs-lisp-mode
                     lisp-mode
                     clojure-mode
                     scheme-mode
                     haskell-mode
                     ruby-mode
                     rspec-mode
                     python-mode
                     c-mode
                     c++-mode
                     objc-mode
                     latex-mode
                     js-mode
                     plain-tex-mode))
           (let ((mark-even-if-inactive transient-mark-mode))
             (indent-region (region-beginning) (region-end) nil))))))


(require 'session)
(add-hook 'after-init-hook 'session-initialize)
(load "desktop")
(desktop-save-mode) 

(setq load-path (cons "~/.emacs.d/org2blog/" load-path))
(require 'org2blog-autoloads)

Entered on [2013-11-19 二 20:04]
 
 [[file:~/org/study.org::*MBA%E8%AF%BE%E7%A8%8B][MBA课程]]
**** jdp-latex
(mapc (lambda (mode)
	(add-hook 'LaTeX-mode-hook mode))
      (list 'auto-fill-mode
            'LaTeX-math-mode
            'turn-on-reftex
            'linum-mode))

(add-hook 'LaTeX-mode-hook
          (lambda ()
            (setq TeX-auto-untabify t     ; remove all tabs before saving
                  TeX-engine 'xetex       ; use xelatex default
                  TeX-show-compilation t) ; display compilation windows
            (TeX-global-PDF-mode t)       ; PDF mode enable, not plain
            (setq TeX-save-query nil)
            (imenu-add-menubar-index)
            (define-key LaTeX-mode-map (kbd "TAB") 'TeX-complete-symbol)))

(setq TeX-view-program-list
      '(("Okular" "okular --unique %o")
        ("Evince" "evince %o")
        ("Firefox" "firefox %o")))

(add-to-list 'load-path "~/.emacs.d/plugins")
(add-hook 'org-mode-hook 
	  (lambda () (setq truncate-lines nil)))
(require 'org-install)
(require 'org-latex)
;;(unless (boundp 'org-export-latex-classes)
;;  (setq org-export-latex-classes nil))

(setq org-export-latex-listings t)
(add-to-list 'org-export-latex-classes
             '("ctexart"
               "\\documentclass[12pt,a4paper]{ctexart}
\\usepackage{multirow,array,multicol,indentfirst}
\\usepackage{SIunits,geometry,fancyhdr}
\\usepackage{tikz,pifont,footnote}
\\usepackage[colorlinks,linkcolor=blue,anchorcolor=blue,citecolor=green]{hyperref}
\\geometry{left=2.5cm,right=2.5cm,top=2.5cm,bottom=2.5cm}
\\usepackage{enumerate,comment}
\\usepackage{lastpage}
\\usepackage{layout}
\\pagestyle{fancy}
                 [NO-DEFAULT-PACKAGES]
                 [EXTRA]"
               ("\\section{%s}" . "\\section*{%s}")
               ("\\subsection{%s}" . "\\subsection*{%s}")
               ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
               ("\\paragraph{%s}" . "\\paragraph*{%s}")
               ("\\subparagraph{%s}" . "\\subparagraph*{%s}")))

;;导出Beamer的设置
;; allow for export=>beamer by placing #+LaTeX_CLASS: beamer in org files
;;-----------------------------------------------------------------------------
(add-to-list 'org-export-latex-classes
             ;; beamer class, for presentations
             '("beamer"
               "\\documentclass[professionalfont]{beamer}
\\usepackage[utf8]{ctex,inputenc}
\\usetheme{Warsaw}
\\usepackage{wrapfig}
\\usepackage{graphicx}
\\usepackage{tikz}
\\usepackage{xcolor}
\\usepackage{amsmath}
\\usepackage{lmodern}
\\usepackage{fontspec,xunicode,xltxtra}
\\usepackage{polyglossia}
\\usepackage{verbatim}
\\usepackage{listings}
                 [NO-DEFAULT-PACKAGES]
                 [EXTRA]"
               ("\\section{%s}" . "\\section*{%s}")
               ("\\begin{frame}[fragile]\\frametitle{%s}"
                "\\end{frame}"
                "\\begin{frame}[fragile]\\frametitle{%s}"
                "\\end{frame}")))

(setq ps-paper-type 'a4
      ps-font-size 16.0
      ps-print-header nil
      ps-landscape-mode nil)


(require 'org-latex)


Entered on [2013-11-19 二 20:06]
 
 [[file:~/org/study.org::*2013-11-19%20%E6%98%9F%E6%9C%9F%E4%BA%8C][2013-11-19 星期二]]
** 2013-12 十二月
*** 2013-12-02 星期一
**** 农历日历需要"cal-china-x.el"
(setq diary-file "~/diary")
(setq diary-mail-addr "jhsygg@126.com")
(add-hook 'diary-hook 'appt-make-list)

(setq holiday-general-holidays '((holiday-fixed 1 1 "元旦")
				 (holiday-fixed 2 14 "情人节")
				 (holiday-lunar 2 6 "父亲生日" 0)
				 (holiday-fixed 3 14 "白色情人节")
				 (holiday-lunar 3 14 "二妹生日" 0)
				 (holiday-fixed 4 1 "愚人节")
				 (holiday-fixed 5 1 "劳动节")
				 (holiday-float 5 0 2 "母亲节")
				 (holiday-fixed 6 1 "儿童节")
				 (holiday-float 6 0 3 "父亲节")
				 (holiday-lunar 6 7 "母亲生日" 0)
				 (holiday-fixed 7 1 "建党节")
				 (holiday-fixed 8 1 "建军节")
				 (holiday-fixed 9 10 "教师节")
				 (holiday-fixed 10 1 "国庆节")
				 (holiday-fixed 12 25 "圣诞节")
				 (holiday-fixed 9 5 "浩月生日")
				 (holiday-lunar 1 1 "春节(正月初一)" 0)
				 (holiday-lunar 1 2 "春节(正月初二)" 0)
				 (holiday-lunar 1 3 "春节(正月初三)" 0)
				 (holiday-lunar 1 15 "元宵节" 0)
				 (holiday-solar-term "清明" "清明节")
				 (holiday-lunar 5 5 "端午节" 0)
				 (holiday-lunar 8 15 "中秋节" 0)
				 (holiday-lunar 9 9 "重阳节" 0)
				 (holiday-lunar 8 8 "浩月生日" 0)
				 (holiday-lunar 11 29 "我的生日" 0)
				 (holiday-lunar 12 8 "腊八节" 0)
				 (holiday-lunar 12 24 "小年，扫房日" 0)
				 ))

(add-to-list 'load-path "~/.emacs.d/el-get/cal-china-x")
(require 'cal-china-x)

(setq calendar-holidays holiday-general-holidays)

(setq calendar-load-hook
      '(lambda ()
	 (set-face-foreground 'diary-face "skyblue")
	 (set-face-background 'holiday-face "slate blue")
	 (set-face-foreground 'holiday-face "white")))

;;设置我所在地方的经纬度，calendar里有个功能是日月食的预测，和你的经纬度相联系的。
;; 让emacs能计算日出日落的时间，在 calendar 上用 S 即可看到
(setq calendar-latitude +26.61)
(setq calendar-longitude +104.79)
(setq calendar-location-name "六盘水")

;; 设置 calendar 的显示
(setq calendar-remove-frame-by-deleting t)
(setq calendar-week-start-day 1)            ; 设置星期一为每周的第一天
(setq calendar-mark-diary-entries-flag nil)     ; 标记calendar上有diary的日期

;; 去掉不关心的节日，设定自己在意的节日，在 calendar 上用 h 显示节日
(setq holiday-christian-holidays nil)
(setq holiday-hebrew-holidays nil)
(setq holiday-islamic-holidays nil)
(setq holiday-solar-holidays nil)

;;按中国习惯，周一为一周的第一天
(setq calendar-week-start-day 1)    

;;在日历中突出标记节日和生日
(setq calendar-mark-holidays-flag t)

;;打开自动列出节日和生日列表
(setq calendar-view-holidays-initially-flag t)




(provide 'chinese-calendar)
;;; chinese-calendar.el ends here 

Entered on [2013-12-02 一 11:56]
 
 [[file:~/org/gtd.org.gpg::*emacs][emacs]]
**** emacs-org-latex配置
(mapc (lambda (mode)
	(add-hook 'LaTeX-mode-hook mode))
      (list 'auto-fill-mode
            'LaTeX-math-mode
            'turn-on-reftex
            'linum-mode))

(add-hook 'LaTeX-mode-hook
          (lambda ()
            (setq TeX-auto-untabify t     ; remove all tabs before saving
                  TeX-engine 'xetex       ; use xelatex default
                  TeX-show-compilation t) ; display compilation windows
            (TeX-global-PDF-mode t)       ; PDF mode enable, not plain
            (setq TeX-save-query nil)
            (imenu-add-menubar-index)
            (define-key LaTeX-mode-map (kbd "TAB") 'TeX-complete-symbol)))

(setq TeX-view-program-list
      '(("Okular" "okular --unique %o")
        ("Evince" "evince %o")
        ("Firefox" "firefox %o")))

(add-to-list 'load-path "~/.emacs.d/plugins")
(add-hook 'org-mode-hook 
	  (lambda () (setq truncate-lines nil)))
(require 'org-install)
(require 'org-latex)
;;(unless (boundp 'org-export-latex-classes)
;;  (setq org-export-latex-classes nil))

(setq org-export-latex-listings t)
(add-to-list 'org-export-latex-classes
             '("ctexart"
               "\\documentclass[11pt,a4paper]{ctexart}
\\usepackage[utf8]{inputenc}
\\usepackage[T1]{fontenc}
\\usepackage{fixltx2e}
\\usepackage{graphicx}
\\usepackage{longtable}
\\usepackage{float}
\\usepackage{wrapfig}
\\usepackage{soul}
\\usepackage{textcomp}
\\usepackage{marvosym}
\\usepackage{wasysym}
\\usepackage{latexsym}
\\usepackage{amssymb}
\\usepackage{multirow,array,multicol,indentfirst}
\\usepackage{SIunits,geometry,fancyhdr}
\\usepackage{tikz,pifont,footnote}
\\usepackage[colorlinks,linkcolor=blue,anchorcolor=blue,citecolor=green]{hyperref}
\\geometry{left=2.5cm,right=2.5cm,top=2.5cm,bottom=2.5cm}
\\tolerance=1000
\\usepackage{enumerate,comment}
\\usepackage{lastpage}
\\usepackage{layout}
\\pagestyle{fancy}
                 [NO-DEFAULT-PACKAGES]
                 [EXTRA]"
               ("\\section{%s}" . "\\section*{%s}")
               ("\\subsection{%s}" . "\\subsection*{%s}")
               ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
               ("\\paragraph{%s}" . "\\paragraph*{%s}")
               ("\\subparagraph{%s}" . "\\subparagraph*{%s}")))

;;导出Beamer的设置
;; allow for export=>beamer by placing #+LaTeX_CLASS: beamer in org files
;;-----------------------------------------------------------------------------
(add-to-list 'org-export-latex-classes
             ;; beamer class, for presentations
             '("beamer"
               "\\documentclass[professionalfont]{beamer}
\\usepackage[utf8]{ctex,inputenc}
\\usetheme{Warsaw}
\\usepackage{wrapfig}
\\usepackage{graphicx}
\\usepackage{tikz}
\\usepackage{xcolor}
\\usepackage{amsmath}
\\usepackage{lmodern}
\\usepackage{fontspec,xunicode,xltxtra}
\\usepackage{polyglossia}
\\usepackage{verbatim}
\\usepackage{listings}
                 [NO-DEFAULT-PACKAGES]
                 [EXTRA]"
               ("\\section{%s}" . "\\section*{%s}")
               ("\\begin{frame}[fragile]\\frametitle{%s}"
                "\\end{frame}"
                "\\begin{frame}[fragile]\\frametitle{%s}"
                "\\end{frame}")))

(setq ps-paper-type 'a4
      ps-font-size 16.0
      ps-print-header nil
      ps-landscape-mode nil)

Entered on [2013-12-02 一 11:58]
 
 [[file:~/org/gtd.org.gpg::*emacs][emacs]]
**** emacs el-get install 
;; So the idea is that you copy/paste this code into your *scratch* buffer,
;; hit C-j, and you have a working el-get.
(url-retrieve
 "https://raw.github.com/dimitri/el-get/master/el-get-install.el"
 (lambda (s)
   (goto-char (point-max))
   (eval-print-last-sexp)))
Entered on [2013-12-02 一 23:52]
 
 [[file:~/org/gtd.org.gpg::*Junrnal][Junrnal]]
*** 2013-12-04 星期三
**** 关于auto-complete的安装和设置
el-get中下载auto-complete,后make make install

;;jdp-ac.el
;;打开自动补全
(add-to-list 'load-path "~/.emacs.d/plugins")
(require 'auto-complete)
(global-auto-complete-mode t)
(define-key ac-complete-mode-map "\C-n" 'ac-next)
(define-key ac-complete-mode-map "\C-p" 'ac-previous)
(setq ac-auto-start 1)
(global-set-key "\M-/" 'ac-start)
(define-key ac-complete-mode-map "\M-/" 'ac-stop)
(define-key ac-complete-mode-map "\t" 'ac-complete)
(define-key ac-complete-mode-map "\r" nil)
(require 'auto-complete-config)
(add-to-list 'ac-dictionary-directories "~/.emacs.d/plugins/ac-dict")
(ac-config-default)

Entered on [2013-12-04 三 12:40]
 
 [[file:~/.emacs.d/plugins/jdp-ac.el]]
*** 2013-12-09 星期一
**** fedora 17 aircrack-ng工具包的使用
安装：sudo yum install aircrack-ng
aircrack-ng中的工具有：
| airmon-ng   | 处理网卡工作模式 |
| airodump-ng | 抓包             |
| aircrack-ng | 破解             |
| aireplay-ng | 发包，干扰       |
|             |                  | 


  
Entered on [2013-12-09 一 13:50]
 
 [[file:~/org/gtd.org.gpg::*%E7%BD%91%E7%BB%9C][网络]]
*** 2013-12-11 星期三
**** 系统模型之间的转换
第一类函数
| tfsys = tf(sys)  | 将其他类型的模型转换为多项式传递函数模型 |
| zsys = zpk(sys)  | 将其他类型的模型转换为zpk模型            |
| sys_ss = ss(sys) | 将其他类型的模型转换为ss模型             |
第二类函数
| [A,B,C,D] = tf2ss(num,den)    | tf模型参数转换为ss模型参数                          |
| [num,dem] = ss2tf(A,B,C,D,iu) | ss模型参数转换为tf模型参数，iu表示对应第i路传递函数 |
| [z,p,k] = tf2zp(num,den)      | tf模型参数转换为zpk模型参数                         |
| [num,den] = zp2tf(z,p,k)      | zpk模型参数转换为tf模型参数                         |
| [A,B,C,D] = zp2ss(z,p,k)      | zpk模型参数转换为ss模型参数                         |
| [z,p,k] = ss2zp(A,B,C,D,i)    | ss模型参数转换为zpk模型参数，i表示对应第i路传递函数 |

实例10-10:[[~/matlab-study/m10_10.m]]
已知系统传递函数模型$G(s)=\face {5}{(s^2+2s+1)(S+2)}$,试求其零极点模型及状态空间模型。
实例10-11:[[~/matlab-study/m10_11.m]]


Entered on [2013-12-11 三 11:54]
*** 2013-12-13 星期五
**** emacs org-mode to latex setup
(mapc (lambda (mode)
	(add-hook 'LaTeX-mode-hook mode))
      (list 'auto-fill-mode
            'LaTeX-math-mode
            'turn-on-reftex
            'linum-mode))

(add-hook 'LaTeX-mode-hook
          (lambda ()
            (setq TeX-auto-untabify t     ; remove all tabs before saving
                  TeX-engine 'xetex       ; use xelatex default
                  TeX-show-compilation t) ; display compilation windows
            (TeX-global-PDF-mode t)       ; PDF mode enable, not plain
            (setq TeX-save-query nil)
            (imenu-add-menubar-index)
            (define-key LaTeX-mode-map (kbd "TAB") 'TeX-complete-symbol)))

(setq TeX-view-program-list
      '(("Okular" "okular --unique %o")
        ("Evince" "evince %o")
        ("Firefox" "firefox %o")))

(add-to-list 'load-path "~/.emacs.d/plugins")
(add-hook 'org-mode-hook 
	  (lambda () (setq truncate-lines nil)))

;; (require 'org-install)
(require 'org-latex)

;;(unless (boundp 'org-export-latex-classes)
;;  (setq org-export-latex-classes nil))

(setq org-export-latex-listings t)
(add-to-list 'org-export-latex-classes
             '("ctexart"
               "\\documentclass[11pt,a4paper]{ctexart}
\\usepackage[utf8]{inputenc}
\\usepackage{abstract}
\\usepackage{fixltx2e}
\\usepackage{graphicx}
\\usepackage{longtable}
\\usepackage{float}
\\usepackage{wrapfig}
\\usepackage{soul}
\\usepackage{textcomp}
\\usepackage{marvosym}
\\usepackage{wasysym}
\\usepackage{latexsym}
\\usepackage{amssymb}
\\usepackage{multirow,array,multicol,indentfirst}
\\usepackage{SIunits,geometry,fancyhdr}
\\usepackage{tikz,pifont,footnote}
\\usepackage[colorlinks,linkcolor=blue,anchorcolor=blue,citecolor=green]{hyperref}
\\geometry{left=2.5cm,right=2.5cm,top=2.5cm,bottom=2.5cm}
\\tolerance=1000
\\usepackage{enumerate,comment}
\\usepackage{lastpage}
\\usepackage{layout}
\\CTEXsetup[format={\\raggedright}]{section}
\\CTEXsetup[format={\\raggedright}]{subsection}
\\CTEXsetup[format={\\raggedright}]{subsubsection}
\\pagestyle{fancy}
                 [NO-DEFAULT-PACKAGES]
                 [EXTRA]"
               ("\\section{%s}" . "\\section*{%s}")
               ("\\subsection{%s}" . "\\subsection*{%s}")
               ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
               ("\\paragraph{%s}" . "\\paragraph*{%s}")
               ("\\subparagraph{%s}" . "\\subparagraph*{%s}")))

;;导出Beamer的设置
;; allow for export=>beamer by placing #+LaTeX_CLASS: beamer in org files
;;-----------------------------------------------------------------------------
(add-to-list 'org-export-latex-classes
             ;; beamer class, for presentations
             '("beamer"
               "\\documentclass[professionalfont]{beamer}
\\usepackage[utf8]{ctex,inputenc}
\\usetheme{Warsaw}
\\usepackage{wrapfig}
\\usepackage{graphicx}
\\usepackage{tikz}
\\usepackage{xcolor}
\\usepackage{amsmath}
\\usepackage{lmodern}
\\usepackage{fontspec,xunicode,xltxtra}
\\usepackage{polyglossia}
\\usepackage{verbatim}
\\usepackage{listings}
                 [NO-DEFAULT-PACKAGES]
                 [EXTRA]"
               ("\\section{%s}" . "\\section*{%s}")
               ("\\begin{frame}[fragile]\\frametitle{%s}"
                "\\end{frame}"
                "\\begin{frame}[fragile]\\frametitle{%s}"
                "\\end{frame}")))

(setq ps-paper-type 'a4
      ps-font-size 16.0
      ps-print-header nil
      ps-landscape-mode nil)

(require 'ac-math)

(add-to-list 'ac-modes 'latex-mode)   ; make auto-complete aware of `latex-mode`

(defun ac-latex-mode-setup ()         ; add ac-sources to default ac-sources
  (setq ac-sources
	(append '(ac-source-math-unicode ac-source-math-latex ac-source-latex-commands)
		ac-sources)))

(add-hook 'latex-mode-hook 'ac-latex-mode-setup)

Entered on [2013-12-13 五 08:23]
 
 [[file:~/org/gtd.org.gpg::*latex][latex]]
*** 2013-12-18 星期三
**** fedora gcc mysql
gcc $(mysql_config --cflags) lmysql.c -o lmysql $(mysql_config --libs)
Entered on [2013-12-18 三 09:45]
 
 [[file:~/org/gtd.org.gpg::*c%E8%AF%AD%E8%A8%80][c语言]]
**** gcc mysql
echo $(mysql_config --cflags)
echo $(mysql_config --libs)

gcc $(mysql_config --cflags) XXX.c -o XXX $(mysql_config --libs)

最后，只使用
gcc XXX.c -o XXX -L/usr/lib64/mysql -lmysqlclient

Entered on [2013-12-18 三 10:04]
 
 [[file:~/org/gtd.org.gpg::*c%E8%AF%AD%E8%A8%80][c语言]]
*** 2013-12-19 星期四
**** 语言学习的书
《The C Programming Language》 --《C程序设计语言》
《C Reference Manual》 --《C语言设计语言》
《Pointers on C》 --《C和指针》
《C Trap and Pitfalls》 --《C陷井与缺陷》
《Expert C Programming》 --《C专家编程》
Entered on [2013-12-19 四 08:58]
 
 [[file:~/org/gtd.org.gpg::*c%E8%AF%AD%E8%A8%80][c语言]]
* 2014
** 2014-01 一月
*** 2014-01-06 星期一
**** git 学习
time git log -------- 执行git log 并 运行显示时间
配置和初始化
$ git config --global user.name "Scott Chacon"
$ git config --global user.email "schacon@gmail.com"

$ git config --global core.editor 'emacs'

$ cat ~/.gitconfig

初始化一个新的git仓库

$ rails myproject
$ cd myproject
$ git init

$ git add .
$ git commit -m 'initial commit'

$ git log

Entered on [2014-01-06 一 15:37]
 
 [[file:~/org/gtd.org.gpg::*linux%E5%8F%8Alinux%E5%86%85%E6%A0%B8][linux及linux内核]]
*** 2014-01-15 星期三
**** c mysql 的编译
gcc -o lmysql lmysql.c `mysql_config --cflags --libs`
Entered on [2014-01-15 三 21:38]
 
 [[file:~/org/gtd.org.gpg::*c%E8%AF%AD%E8%A8%80][c语言]]
*** 2014-01-17 星期五
**** SELinux 
ps -Z 查看进程的域，进程限制

ls -Z 查看文件的上下文，资源限制

getenforce 查看SELinux 的工作状态

setenforce 0/1 设置当前SELinux 状态

| system_u:  | object_r:  | httpd_exec-t: | so      |
| 用户(user) | 角色(role) | 类型(type)    | MLS,MCS |

恢复上下文信息
restorecon -R -v /var/www

chcon --reference=/var/www/html -R ~/webroot

Entered on [2014-01-17 五 22:06]
 
 [[file:~/org/gtd.org.gpg::*linux%E5%8F%8Alinux%E5%86%85%E6%A0%B8][linux及linux内核]]
** 2014-02 二月
*** 2014-02-07 星期五
**** 七年级 上册 第1课 

entered on [2014-02-07 五]
 
 [[file:~/org/gtd.org.gpg::*%E8%AF%AD%E6%96%87][语文]]
*** 2014-02-10 星期一
**** ls 参数
|--------+-----------------------------+----------------------------------------------------------|
| 单字母 | 全字                        | 描述                                                     |
|--------+-----------------------------+----------------------------------------------------------|
| -a     | --all                       | 不要忽略以句点开关的条目                                 |
| -A     | --almost -all               | 不要列出.和..文件                                        |
|        | --author                    | 打印每个文件的作者                                       |
| -b     | --escape                    | 打印不可打印字符的八进制值                               |
|        | --block -size=size          | 使用size-byte块计算块大小                                |
| -B     | --ignore -backups           | 不要列出带波浪号的条目（波浪号表示备份副本）             |
| -c     |                             | 根据最后一次修改的时间排序                               |
| -C     |                             | 按列列出条目                                             |
|        | --color=when                | 何时使用颜色（总是，从不，自动）                         |
| -d     | --directory                 | 列出目录条目而不是内容，不要废弃符号链接                 |
| -F     | --classify                  | 向条目附加文件类型指示符                                 |
|        | --file-type                 | 仅向某些文件类型（非可执行文件）附加文件类型指示符       |
|        | --format=word               | 以交叉、逗号、水平、长、单列、详细、垂直等形式格式化输出 |
| -g     |                             | 列出文件所有者以外的详细信息                             |
|        | --group -directories -first | 在文件之前列出所有目录                                   |
| -G     | --no -group                 | 在长列表中不显示组名称                                   |
|        |                             |                                                          |
|--------+-----------------------------+----------------------------------------------------------|

entered on [2014-02-10 一]
 
 [[file:~/org/gtd.org.gpg::*linux%E5%8F%8Alinux%E5%86%85%E6%A0%B8][linux及linux内核]]
*** 2014-02-14 星期五
**** Makefile(术语)
规则：用于说明如何生成一个或多个目标文件，规则格式如下：
targets:prerequisites
    command
目标 依赖 命令
main.o:main.c
    gcc -c main.c(首为tab)

在makefile中，存在系统默认的自动化变量
$^:代表所有的依赖文件
$@:代表目标
$<:代表第一个依赖的文件

hello:main.o func1.o func2.o
    gcc main.o func1.o func2.o - hello
=>>
hello:main.o func1.o func2.o
    gcc $^ -o $@

hello:hello.c
    @gcc hello.c -o hell ;; 取消回显
entered on [2014-02-14 五]
 
 [[file:~/org/gtd.org.gpg::*c%E8%AF%AD%E8%A8%80][c语言]]
*** 2014-02-25 星期二
**** Man-Pages 的主要内容
|---+---------------+---------------|
| 1 | naem          | 名称          |
| 2 | synopsis      | 摘要          |
| 3 | description   | 原型          |
| 4 | return value  | 返回值        |
| 5 | conforming to | 遵照标准      |
| 6 | notes         | 提示          |
| 7 | bugs          | 可能引起的bug |
| 8 | see also      | 参考          |
| 9 | colophon      | 版本信息      |
|---+---------------+---------------|

entered on [2014-02-25 二]
 
 [[file:~/org/gtd.org.gpg::*linux%E5%8F%8Alinux%E5%86%85%E6%A0%B8][linux及linux内核]]
**** gdb
| run      | r |
| break    | b |
| continue | c |
| display  | d |
| info     | i |
|          |   |
entered on [2014-02-25 二]
 
 [[file:~/org/gtd.org.gpg::*c%E8%AF%AD%E8%A8%80][c语言]]
*** 2014-02-26 星期三
**** 有关ls的命令
| lsof  | list open files                                |
| lshw  | list handware                                  |
| lsmod | Show the status of modules in the Linux Kernel |
| lspci | list all PCI dervices                          |
|       |                                                |
entered on [2014-02-26 三]
 
 [[file:~/org/gtd.org.gpg::*linux%E5%8F%8Alinux%E5%86%85%E6%A0%B8][linux及linux内核]]
** 2014-03 三月
*** 2014-03-11 星期二
**** 幂函数
形如\(y=x^a\)(a为常数)的函数，即以底数为自变量，幂为因变量，指数为常量的函数称为幂函数。

如\(y=x^2,y=x^-1\)

entered on [2014-03-11 二]
 
 [[file:~/org/gtd.org.gpg::*%E5%AF%8C%E5%85%B0%E5%85%8B%E6%9E%97%E7%9A%84%E5%8D%81%E4%B8%89%E7%A7%8D%E5%93%81%E5%BE%B7][富兰克林的十三种品德]]
** 2014-04 四月
*** 2014-04-22 星期二
**** gcc 的快速理解

预编译: gcc -E -o hello.i hello.c
        gcc -E hello.c -o hello.i

预编译文件->目标文件        gcc -c hello.i -o hello.o

目标文件->链接为执行文件 	gcc hello.o -o hello

使用Make工具

显示不符合标准的代码     gcc -pedantic hello.c -o hello

产生警告信息      gcc -Wall hello.c -o hello

优秀的linux程序员应该尽量避免产生警告信息，使自己的代码始终保持简洁、优美和健壮。

-Werror 把警告当作错误来处理。gcc -Werror hello.c -o hello

库依赖

gcc hello.c -I /home/xiaowp/include -o hello

gcc hello.c -L /home/xiaowp/lib -lhello -o hello

动态链接库(通常以.so结尾)和静态链接库(通常以.s结尾)，两者的差别仅在程序执行时所需的代码是在运行时动态加载的，还是在编译时静态加载的。默认情况下，GCC在链接时优先使用动态链接库，只有当动态链接库不存在时才考虑使用静态链接库，如果需要的话可以在编译时加上-static选项，强制使用静态链接库。

gcc foo.c -L /home/xiaowp/lib -static -lfoo -o foo

代码优化

gcc -Wall -O hello.c -o hello

产生GDB可调试代码

gcc -g hello.c -o hello

gdb hello

entered on [2014-04-22 二]
 
 [[file:~/org/gtd.org.gpg::*c%E8%AF%AD%E8%A8%80][c语言]]
